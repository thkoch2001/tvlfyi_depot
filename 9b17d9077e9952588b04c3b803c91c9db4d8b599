{
  "comments": [
    {
      "key": {
        "uuid": "c237fc17_b2a138c1",
        "filename": "third_party/nix/src/libstore/rpc-store.cc",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-23T23:57:47Z",
      "side": 1,
      "message": ".size() is used above (which is the same as length()), I think only using one of them would be preferable because otherwise it seems like there\u0027s a reason for the switch",
      "range": {
        "startLine": 325,
        "startChar": 31,
        "endLine": 325,
        "endChar": 37
      },
      "revId": "9b17d9077e9952588b04c3b803c91c9db4d8b599",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "743b133a_ab49ef15",
        "filename": "third_party/nix/src/libstore/rpc-store.cc",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-23T22:53:15Z",
      "side": 1,
      "message": "You might want to use std::min, which is C++ (not C) and defined in \u003calgorithm\u003e (already included here explicitly, rather than transitively like cmath).",
      "range": {
        "startLine": 326,
        "startChar": 15,
        "endLine": 326,
        "endChar": 19
      },
      "revId": "9b17d9077e9952588b04c3b803c91c9db4d8b599",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db29c9a3_9d448708",
        "filename": "third_party/nix/src/nix-daemon/nix-daemon-proto.cc",
        "patchSetId": 2
      },
      "lineNbr": 287,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-23T22:58:48Z",
      "side": 1,
      "message": "I\u0027d prefer an explicit type here",
      "range": {
        "startLine": 287,
        "startChar": 10,
        "endLine": 287,
        "endChar": 14
      },
      "revId": "9b17d9077e9952588b04c3b803c91c9db4d8b599",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a552c03b_6303310b",
        "filename": "third_party/nix/src/nix-daemon/nix-daemon-proto.cc",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-23T22:58:48Z",
      "side": 1,
      "message": "Can you reuse the one from above?",
      "range": {
        "startLine": 295,
        "startChar": 0,
        "endLine": 295,
        "endChar": 44
      },
      "revId": "9b17d9077e9952588b04c3b803c91c9db4d8b599",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78c99cc4_cd4ba45d",
        "filename": "third_party/nix/src/nix-daemon/nix-daemon-proto.cc",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-23T22:58:48Z",
      "side": 1,
      "message": "I think `data.has_data()` should exist",
      "range": {
        "startLine": 298,
        "startChar": 16,
        "endLine": 298,
        "endChar": 51
      },
      "revId": "9b17d9077e9952588b04c3b803c91c9db4d8b599",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec70e7d_5755ab29",
        "filename": "third_party/nix/src/proto/worker.proto",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-23T23:57:47Z",
      "side": 1,
      "message": "This field seems to be unused (it is set, but never read). Do we need it?\n\nAlternatively, maybe we should check actual size vs. expected size after the transmission is done?",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 20
      },
      "revId": "9b17d9077e9952588b04c3b803c91c9db4d8b599",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    }
  ]
}