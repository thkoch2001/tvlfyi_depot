{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ce7e8e43_3c18378d",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-12T15:26:14Z",
      "side": 1,
      "message": "same comment here about just using `\u0026[...]`",
      "range": {
        "startLine": 87,
        "startChar": 52,
        "endLine": 87,
        "endChar": 57
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea8b2181_4e3711dc",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-13T11:07:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce7e8e43_3c18378d",
      "range": {
        "startLine": 87,
        "startChar": 52,
        "endLine": 87,
        "endChar": 57
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7068bee_d33cc307",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-12T15:26:14Z",
      "side": 1,
      "message": "...lol",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 9
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a4be096_bff3731f",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-13T11:07:52Z",
      "side": 1,
      "message": "Yeah, to be filled in in the next commits ... explained it.",
      "parentUuid": "a7068bee_d33cc307",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 96,
        "endChar": 9
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3eccb0_c467fe24",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-12T15:26:14Z",
      "side": 1,
      "message": "generally it\u0027s better style to have functions like this take a `Writer` or `Formatter` and write into that rather than returning a `String` - that way messages can be composed together into larger strings without the extra allocation for the return value of this function.",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 52
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e37ca67_1556ff67",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-13T11:07:52Z",
      "side": 1,
      "message": "Hm, we don\u0027t have this outside-in use-case here though, this is explicitly always the `message` field of a Diagnostic. The only significant branch to be expected here is if some errors create their diagnostic in a completely different way (which is plausible!), in which case this function would not be hit at all and we\u0027d likely use `write!` into a buffer of some kind to construct the error message.",
      "parentUuid": "ad3eccb0_c467fe24",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 52
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b207952_057c58d4",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-13T14:26:48Z",
      "side": 1,
      "message": "the [next CL in the chain](https://cl.tvl.fyi/c/depot/+/6535/9/corp/tvixbolt/src/main.rs) would benefit from my suggestion - actually:\n```\nwriteln!\n  \u0026mut out.compiler_errors,\n  \"{}\\n\",\n  error.fancy_format_str(\u0026codemap).trim()\n```\n\nunnecessarily allocates two strings.\n\nActually, another option here would be to return some reference-containing struct that impls `Display` itself, since the methods of Display do the right thing here.",
      "parentUuid": "6e37ca67_1556ff67",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 52
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8877b1bc_bbd46fd3",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-12T15:26:14Z",
      "side": 1,
      "message": "is Debug really what we want here?",
      "range": {
        "startLine": 156,
        "startChar": 81,
        "endLine": 156,
        "endChar": 85
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6d02b9a_43b7a880",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-13T11:07:52Z",
      "side": 1,
      "message": "No, but it will be a lot of code to render these parse errors nicely (rnix doesn\u0027t really format its errors nicely by default, and we do want those to be consistent with the rest of our error display), so for now this is better than nothing.",
      "parentUuid": "8877b1bc_bbd46fd3",
      "range": {
        "startLine": 156,
        "startChar": 81,
        "endLine": 156,
        "endChar": 85
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67bbadf_396a860f",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-12T15:26:14Z",
      "side": 1,
      "message": "nit: could be `{feature}`",
      "range": {
        "startLine": 164,
        "startChar": 62,
        "endLine": 164,
        "endChar": 66
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3357d6bd_f73667af",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-13T11:07:52Z",
      "side": 1,
      "message": "The reason I don\u0027t like that syntax is that it doesn\u0027t compose with other format modifiers, so if you have a string (unlike this one, of course) where you have both a plain interpolation and something parameterised it gets wonky because some parameters are inlined and some are passed later. Maybe I\u0027m just getting old ...",
      "parentUuid": "b67bbadf_396a860f",
      "range": {
        "startLine": 164,
        "startChar": 62,
        "endLine": 164,
        "endChar": 66
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1f6d265_b41f8e9a",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-13T14:26:48Z",
      "side": 1,
      "message": "I don\u0027t disagree, to be honest. I dislike when something goes from a single variable to a complex expression and that requires me to refactor it out.\n\nMostly just wanted to educate ;)",
      "parentUuid": "3357d6bd_f73667af",
      "range": {
        "startLine": 164,
        "startChar": 62,
        "endLine": 164,
        "endChar": 66
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3baf773c_46f40c12",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-12T15:26:14Z",
      "side": 1,
      "message": "a derive macro like [`derive_more::Display`](https://jeltef.github.io/derive_more/derive_more/display.html) might be nice for this",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 166,
        "endChar": 9
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6226d5_790010de",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-13T11:07:52Z",
      "side": 1,
      "message": "That would expect us to cover each variant though, no? We do have variants here which will hit completely different specialised code paths for printing their errors (e.g. if we need to re-parse the AST, retrieve surrounding elements etc. to create nice spans).",
      "parentUuid": "3baf773c_46f40c12",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 166,
        "endChar": 9
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08d8aaca_292b93f9",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-09-13T14:26:48Z",
      "side": 1,
      "message": "I think we could factor those out into top-level functions in that case.\n\nBut yeah, maybe better to wait to try to generalize until after we\u0027ve seen more complex cases.",
      "parentUuid": "5f6226d5_790010de",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 166,
        "endChar": 9
      },
      "revId": "e1348e59f498271a91f3c180a3ceee0f41a89688",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}