commit ea9f0af8ba6fc8044ddf237c29eae4384841b9e1
Author: Ilan Joselevich <personal@ilanjoselevich.com>
Date:   Mon Jun 10 22:09:48 2024 +0300

    rust.lib -> stdenv.hostPlatform.rust

    context:
    https://github.com/NixOS/nixpkgs/commit/e3e57b8f1885bf1dc4787728479711f46a4171cc
    https://github.com/NixOS/nixpkgs/pull/271707

diff --git a/src/render.rs b/src/render.rs
index a269fc7..bb878d3 100644
--- a/src/render.rs
+++ b/src/render.rs
@@ -184,14 +184,8 @@ fn cfg_to_nix_expr_filter(
                 })?;
                 Ok(tera::Value::String(cfg_to_nix_expr(&expr)))
             } else {
-                // `lib.toRustTarget` has existed since Nixpkgs 21.05. That is
-                // hopefully good enough.
-                //
-                // We are choosing an arbitrary rust version to grab `lib` from,
-                // which is unfortunate, but `lib` has been version-agnostic the
-                // whole time so this is good enough for now.
                 let condition = format!(
-                    "(pkgs.rust.lib.toRustTarget stdenv.hostPlatform == {})",
+                    "(stdenv.hostPlatform.rust.rustcTarget == {})",
                     escape_nix_string(key)
                 );
                 Ok(tera::Value::String(condition))
diff --git a/crate2nix/templates/nix/crate2nix/default.nix b/crate2nix/templates/nix/crate2nix/default.nix
index 5c93792..95d3730 100644
--- a/templates/nix/crate2nix/default.nix
+++ b/templates/nix/crate2nix/default.nix
@@ -27,14 +27,11 @@ rec {
     fuchsia = true;
     test = false;
 
-    /* We are choosing an arbitrary rust version to grab `lib` from,
-      which is unfortunate, but `lib` has been version-agnostic the
-      whole time so this is good enough for now.
-    */
-    os = pkgs.rust.lib.toTargetOs platform;
-    arch = pkgs.rust.lib.toTargetArch platform;
-    family = pkgs.rust.lib.toTargetFamily platform;
-    vendor = pkgs.rust.lib.toTargetVendor platform;
+    inherit (platform.rust.platform)
+      arch
+      os
+      vendor;
+    family = platform.rust.platform.target-family;
     env = "gnu";
     endian =
       if platform.parsed.cpu.significantByte.name == "littleEndian"
@@ -277,7 +274,7 @@ rec {
           let
             self = {
               crates = lib.mapAttrs (packageId: value: buildByPackageIdForPkgsImpl self pkgs packageId) crateConfigs;
-              target = makeTarget pkgs.stdenv.hostPlatform;
+              target = makeTarget stdenv.hostPlatform;
               build = mkBuiltByPackageIdByPkgs pkgs.buildPackages;
             };
           in
