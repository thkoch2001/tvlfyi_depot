{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a6205d6_e742326a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-09-15T09:25:10Z",
      "side": 1,
      "message": "\u003e We previously kept the trait of a BlobService sync.\n\nYeah, mixing synchronous I/O and asynchronous I/O just isn\u0027t really workable.\n\nYou can do it on a small scale, if you\u0027re super super careful to never do anything that blocks from an async context, but it\u0027s fragile.",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a7e3da_256e5ed7",
        "filename": "tvix/cli/src/tvix_store_io.rs",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-09-15T09:25:10Z",
      "side": 1,
      "message": "Could you use generics instead of `dyn` here?",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 295,
        "endChar": 0
      },
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab21f779_b5f7804b",
        "filename": "tvix/cli/src/tvix_store_io.rs",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T09:46:10Z",
      "side": 1,
      "message": "no, because the exact type of store is configurable as a cmdline parameter. at least it is for tvix-store CLI right now, and I assume it\u0027ll be for tvix-cli too.",
      "parentUuid": "f2a7e3da_256e5ed7",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 295,
        "endChar": 0
      },
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d818b9f_86026fd4",
        "filename": "tvix/cli/src/tvix_store_io.rs",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T09:46:48Z",
      "side": 1,
      "message": "this will essentially be a different concrete type depending on how you layer your stores together, so all we know is that it speaks this interface.",
      "parentUuid": "ab21f779_b5f7804b",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 295,
        "endChar": 0
      },
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "339f0720_524f0104",
        "filename": "tvix/store/src/bin/tvix-store.rs",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-15T11:26:41Z",
      "side": 1,
      "message": "I\u0027m getting a panic when doing a `tvix-store import` now. Backtrace:\n\n```\n$ RUST_BACKTRACE\u003d1 ../target/debug/tvix-store import ../docs\nthread \u0027tokio-runtime-worker\u0027 panicked at \u0027Cannot start a runtime from within a runtime. This happens because a function (like `block_on`) attempted to block the current thread while the thread is being used to drive asynchronous tasks.\u0027, store/src/pathinfoservice/grpc.rs:155:14\nstack backtrace:\n   0: rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: tokio::runtime::context::runtime::enter_runtime\n             at /home/cbrewster/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.32.0/src/runtime/context/runtime.rs:68:5\n   3: tokio::runtime::handle::Handle::block_on\n             at /home/cbrewster/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.32.0/src/runtime/handle.rs:309:9\n   4: \u003ctvix_store::pathinfoservice::grpc::GRPCPathInfoService as tvix_store::pathinfoservice::PathInfoService\u003e::calculate_nar\n             at ./src/pathinfoservice/grpc.rs:153:20\n   5: tvix_store::main::{{closure}}::{{closure}}::{{closure}}\n             at ./src/bin/tvix-store.rs:212:54\n...\n```\n\nI think the `calculate_nar` call needs to be in a `spawn_blocking` still since it calls `block_on` in the gRPC implementation. Will be a non-issue once the path_info service is asyncified.",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6672f8a1_0d06c352",
        "filename": "tvix/store/src/bin/tvix-store.rs",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T11:31:40Z",
      "side": 1,
      "message": "Yes, I need to do the same there as I did in the tvix-cli binary. new revision incoming a bit later today.",
      "parentUuid": "339f0720_524f0104",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3185e86_a5b861af",
        "filename": "tvix/store/src/bin/tvix-store.rs",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T12:05:10Z",
      "side": 1,
      "message": "...and some regression tests for the binary, this has happened too often;-)",
      "parentUuid": "6672f8a1_0d06c352",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39d2ed39_1745804c",
        "filename": "tvix/store/src/bin/tvix-store.rs",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T12:57:26Z",
      "side": 1,
      "message": "Fixed in a later revision, integration test added to cl/9338.",
      "parentUuid": "c3185e86_a5b861af",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "571dd609_67b84ba9",
        "filename": "tvix/store/src/blobservice/dumb_seeker.rs",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-15T11:26:41Z",
      "side": 1,
      "message": "I didn\u0027t know this was supported, I usually see this like:\n```\n*self.project().bytes_to_skip \u003d bytes_to_skip;\n```",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10585c8d_33b2ac82",
        "filename": "tvix/store/src/blobservice/dumb_seeker.rs",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T12:57:26Z",
      "side": 1,
      "message": "Yes, this looks a lit less convoluted. I also updated a similar instance of this in L117.",
      "parentUuid": "571dd609_67b84ba9",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3938c4f6_b21ea984",
        "filename": "tvix/store/src/blobservice/mod.rs",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-15T11:26:41Z",
      "side": 1,
      "message": "Unrelated to this cl, but any reason to include this in the trait? I usually try to keep \"constructors\" out of traits since different implementations might be constructed differently. (async vs sync depending on the impl is a potential example of this)",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68d891a9_bb3394b6",
        "filename": "tvix/store/src/blobservice/mod.rs",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-15T12:07:45Z",
      "side": 1,
      "message": "The idea was to make different store protocols pluggable by their URI, but something needs to collect them all together anyways. Happy to shuffle things around though, let\u0027s do it in a followup?",
      "parentUuid": "3938c4f6_b21ea984",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bbfd612_6496b699",
        "filename": "tvix/store/src/blobservice/mod.rs",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-15T12:43:17Z",
      "side": 1,
      "message": "Sounds good!",
      "parentUuid": "68d891a9_bb3394b6",
      "revId": "75aeda5f1789cf84f71e4a085ad0d3863565ccf9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}