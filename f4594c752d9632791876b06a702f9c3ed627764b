{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d9be5371_65db5dd0",
        "filename": "tvix/store/Cargo.toml",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000075
      },
      "writtenOn": "2023-05-18T23:46:33Z",
      "side": 1,
      "message": "Uh oh! I don\u0027t think eval should depend on store?",
      "revId": "f4594c752d9632791876b06a702f9c3ed627764b",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "846dd30e_91d3f9a1",
        "filename": "tvix/store/Cargo.toml",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-05-19T04:39:29Z",
      "side": 1,
      "message": "This is store depending on eval, and we do this so we can implement the EvalIO trait, and can access the types from its function signatures. If this turns out a problem, we could move the trait and error types to another separate crate.\n\nEval does not depend on store, because it only wants some impl of PathIO. The thing depending on both store and eval is cli, because it instantiates the evaluator with TvixStoreIO.",
      "parentUuid": "d9be5371_65db5dd0",
      "revId": "f4594c752d9632791876b06a702f9c3ed627764b",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a8c69ea_07632647",
        "filename": "tvix/store/Cargo.toml",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000075
      },
      "writtenOn": "2023-05-19T13:19:46Z",
      "side": 1,
      "message": "Oops, yes I meant to say \"store depending on eval is bad\", because it should be possible to use the store with a different language, e.g. a Scheme implementation and Guix.\n\nBased on what you say, it sounds like some traits should be moved to a new crate, so neither store nor eval depends on the other, and then the CLI puts them together.",
      "parentUuid": "846dd30e_91d3f9a1",
      "revId": "f4594c752d9632791876b06a702f9c3ed627764b",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0e257dc_ae329ac5",
        "filename": "tvix/store/Cargo.toml",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-05-19T15:36:59Z",
      "side": 1,
      "message": "We currently did stuff most of the \"hairy bits of Nix\" \"into the CLI crate, which uses nix-compat, so we can let nix eval itself take care of parsing, pure builtins, and core language features. Impure, or even custom builtins can still be passed in, but eval doesn\u0027t need to know how they work inside.\n\nWe had to give some \"io handle\" in, so we could refer to paths etc.\n\nI agree EvalIO, and some simple error types it uses should probably live neither in store nor in eval. I\u0027m also not 100% sure about the shape of EvalIO yet.\nI already had some versioning incompatibilities about SmolStr, builtins.toFile is not implemented either, and we probably don\u0027t want `tvix_eval::errors:ErrorKind` as an error here.\n\nI\u0027d say let\u0027s revisit this at a later point, this is only loosely related to this CL.",
      "parentUuid": "0a8c69ea_07632647",
      "revId": "f4594c752d9632791876b06a702f9c3ed627764b",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33d81f68_05ca1f62",
        "filename": "tvix/store/Cargo.toml",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-05-19T15:43:33Z",
      "side": 1,
      "message": "https://b.tvl.fyi/issues/271",
      "parentUuid": "a0e257dc_ae329ac5",
      "revId": "f4594c752d9632791876b06a702f9c3ed627764b",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59e5cfec_7145f0a7",
        "filename": "tvix/store/Cargo.toml",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-05-21T09:00:57Z",
      "side": 1,
      "message": "This has been addressed in cl/8602, and I rebased this CL on top. `EvalIO` is still defined in the eval crate, but it\u0027s much more self-consistent.",
      "parentUuid": "33d81f68_05ca1f62",
      "revId": "f4594c752d9632791876b06a702f9c3ed627764b",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}