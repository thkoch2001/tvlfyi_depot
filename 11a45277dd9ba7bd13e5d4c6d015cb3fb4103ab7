{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7f71821d_4008b582",
        "filename": "tvix/store/src/directoryservice/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "Can probably drop that newline and have it sort the imports.",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0496b15_dac97e68",
        "filename": "tvix/store/src/directoryservice/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f71821d_4008b582",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b08b111a_fa27a518",
        "filename": "tvix/store/src/directoryservice/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "Agree - or removing that contrstuctor to elsewhere entirely, as discussed in DM (out of scope for this CL though)",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21a3651b_906d1321",
        "filename": "tvix/store/src/directoryservice/traverse.rs",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "Can we require this to just be in some runtime context where `tokio::runtime::Handle::current()` works (and add this requirement to the docstring), similar to how we do in `write_nar`? As you can see a bit further down in the testing code, this gets quite verbose.",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3b463e5_83067df2",
        "filename": "tvix/store/src/directoryservice/traverse.rs",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:02:27Z",
      "side": 1,
      "message": "The tricky thing is this function needs to run on a blocking thread (via `spawn_blocking`), but if its in a blocking context, you can\u0027t get the current tokio handle.\n\nIn `write_nar` I was able to hide this because it handles getting the tokio handle in the async context, then calls spawn_blocking on a private function and passes it the tokio handle.\n\nOne way to do this would be to split `traverse` to into two functions, one that does the tokio handle + spawn_blocking dance and one that actually does the work. I\u0027ll try that, let me know what you think.",
      "parentUuid": "21a3651b_906d1321",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71fca9fb_2a117897",
        "filename": "tvix/store/src/directoryservice/traverse.rs",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:28:27Z",
      "side": 1,
      "message": "Hmm, maybe this was better before. So here\u0027s the problem we\u0027re facing:\n- `tokio::runtime::Handle::current()` must be called in an async context (or it panics)\n- `tokio_handle.block_on()` must be called in a sync context (or it panics)\n\nThis means we need some coordination when crossing the boundary. For async-\u003esync we need to get the handle the in the async context and then pass the handle to the work inside `spawn_blocking`.\n\nFor sync-\u003easync boundary (like tvix_store_io), we already have a tokio handle that we created at initialization time, and we use that same handle to spawn async work.\n\nSo for `write_nar`, most of its callers are async. So we should provide the async function that does the `Handle::current()` -\u003e `spawn_blocking` -\u003e `tokio_handle.block_on` stuff internally. It looks and works like a regular async fn to the caller.\n\nFor `traverse_to`, the only caller is `tvix_store_io` which is sync and already has its own tokio_handle. In this case I think it makes sense to leave `traverse_to` as sync and expect the called to pass in their tokio handle. If we make it async (like the current patchset), `tvix_store_io` needs to do a `tokio::spawn` to call the function which seems like an extra step that\u0027s not needed.",
      "parentUuid": "f3b463e5_83067df2",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87409502_f0a23ae9",
        "filename": "tvix/store/src/directoryservice/traverse.rs",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T14:29:41Z",
      "side": 1,
      "message": "yeah, I think I like this more. thanks!",
      "parentUuid": "f3b463e5_83067df2",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "739b7d9d_0c216cf4",
        "filename": "tvix/store/src/fs/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 452,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "Do we even need to block_on here? We already dropped rx, so the only thing this task is still gonna do is break out of the loop.\n\nI\u0027d probably drop that line, the `let task` above, and add a comment above the `.spawn` call explaining this will run in the background immediately.",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40d523b8_dafaa093",
        "filename": "tvix/store/src/fs/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 452,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:02:27Z",
      "side": 1,
      "message": "We probably don\u0027t. I was worried about maybe leaking tasks but its probably okay.",
      "parentUuid": "739b7d9d_0c216cf4",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83442835_44db55f4",
        "filename": "tvix/store/src/fs/tests.rs",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "This is more out of curiosity - did this fail when we tried to keep using sync io here?",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32c1dc5e_b8308b1e",
        "filename": "tvix/store/src/fs/tests.rs",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:02:27Z",
      "side": 1,
      "message": "Yeah, the tests would deadlock ðŸ˜ž",
      "parentUuid": "83442835_44db55f4",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "498e02b3_75d66ead",
        "filename": "tvix/store/src/nar/renderer.rs",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "Add a line here explaining this needs to be called inside the context of a tokio runtime.",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80d082a3_31e340b3",
        "filename": "tvix/store/src/nar/renderer.rs",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:02:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "498e02b3_75d66ead",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0280ba7_2419a76c",
        "filename": "tvix/store/src/pathinfoservice/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-09-21T10:14:17Z",
      "side": 1,
      "message": "Why does this (now) return a Pin\u003cBox\u003câ€¦\u003e\u003e? Can you add a comment?",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6778e79_22fa812d",
        "filename": "tvix/store/src/pathinfoservice/mod.rs",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2023-09-21T14:02:27Z",
      "side": 1,
      "message": "Added a comment, but we need the async form of an iterator, so a stream. This then has to be pinned so it can be easily polled later.\n\nThis is essentially what async_trait generates for async fns in traits, but for a `Stream` instead of a `Future`",
      "parentUuid": "c0280ba7_2419a76c",
      "revId": "11a45277dd9ba7bd13e5d4c6d015cb3fb4103ab7",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}