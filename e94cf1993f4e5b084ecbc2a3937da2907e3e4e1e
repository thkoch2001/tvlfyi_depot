{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9bbf927d_997736a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-12-06T14:30:11Z",
      "side": 1,
      "message": "mg shell //tvix:shell to be exact",
      "revId": "e94cf1993f4e5b084ecbc2a3937da2907e3e4e1e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e8f1747_683c95d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-12-06T14:37:07Z",
      "side": 1,
      "message": "Well, I\u0027d guess most people would run it *inside* the folder. Dunno, it\u0027s up to people to figure out.",
      "parentUuid": "9bbf927d_997736a6",
      "revId": "e94cf1993f4e5b084ecbc2a3937da2907e3e4e1e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "889c959e_744c732a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2022-12-06T14:57:02Z",
      "side": 1,
      "message": "Can you explain which of *your* workflow gets broken, that you need to workaround?\n\n--\n\nThere\u0027s 30 .envrc files in all of depot, so having them clearly seems to be a usecase.\n\nAlso, running `mg shell` even when inside `tvix` folder breaks:\n\n```\n❯ mg shell\n[mg] entering shell for //tvix\nerror: nix-shell requires a single derivation\nTry \u0027nix-shell --help\u0027 for more information.\n```\n\nSo no matter what, the commit message needs updating.\n\n`mg shell` and that whole workflow probably needs better UX/help too. It\u0027s not documented, and has no `--help`:\n\n```\n❯ mg shell --help\n[mg] entering shell for //--help\nerror: attribute \u0027\"--help\"\u0027 missing for call to \u0027getAttr\u0027\n\n       at «string»:1:17:\n\n            1| with builtins; (getAttr \"--help\" (import /home/flokli/dev/nixos/code.tvl.fyi-2 {}))\n             |                 ^\n```\n\nI don\u0027t think it\u0027s a good alternative right now.\n\n---\n\nSo far I only heard \"your workflow is getting broken\", but not how that one looks like, and how it can potentially be supported?",
      "parentUuid": "0e8f1747_683c95d6",
      "revId": "e94cf1993f4e5b084ecbc2a3937da2907e3e4e1e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d66ddc1e_5ee567bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-12-06T18:25:36Z",
      "side": 1,
      "message": "Basically my workflow is very simple: I want the top-level depot envrc configuration, and nothing else, no matter where in depot I am. Having an .envrc at this level does ~random things (loading stuff from Nix, or something with lorry, idk) and I have to essentially currently do `git update-index --assume-unchanged` on this `.envrc` after changing it to just `source_up` and nothing else.\n\nIn my opinion, things like lorry are _special_ tooling and files that load them should be opt-in. I\u0027ve got no problem with some mechanism that makes arbitrary additional things available (with all the drawbacks of that, such as slow `cd`) for people that *opt-in* to it, but it should IMO not be default behaviour of `direnv` users in depot.\n\nI discussed this with zimbatm on IRC recently and he also agreed that the nested envrc files are not a good pattern and that people should explicitly enter shells when they want them. About that, ...\n\n----------------\n\n\u003e Also, running mg shell even when inside tvix folder breaks\n\nWhat did you expect it to do?\n\n`//tvix` is not a project in itself, but `//tvix/store` or `//tvix/eval` (or `//tools/besadii` or whatever, for that matter) _are_. You run `mg shell` with any buildable target and it will give you a shell for that.\n\n\u003e I don\u0027t think it\u0027s a good alternative right now.\n\nYou can also build a manual nix-shell invocation if you want.\n\n\u003e There\u0027s 30 .envrc files in all of depot, so having them clearly seems to be a usecase.\n\nI see 29, and 25 of those are under `//users` (mostly under `//users/wpcarro`). One of them is the top-level, so there are 3 random ones which I probably would also consider to be bugs.",
      "parentUuid": "889c959e_744c732a",
      "revId": "e94cf1993f4e5b084ecbc2a3937da2907e3e4e1e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79bdb818_f09e6e3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2022-12-06T19:20:52Z",
      "side": 1,
      "message": "\u003e In my opinion, things like lorry are special tooling and files that load them should be opt-in. I\n\nI also don\u0027t think the lorri bits makes a lot of sense and should probably be dropped.\n\n\u003e I\u0027ve got no problem with some mechanism that makes arbitrary additional things available (with all the drawbacks of that, such as slow cd) for people that opt-in to it, but it should IMO not be default behaviour of direnv users in depot.\n\nIf I can opt into this in a more persistent way than manually having to run mg shell //something whenever I enter a directory that\u0027d totally fine for me. That\u0027s what `.envrc` currently does. If we come up with a mg shell hook or something, and an allowlist on which shells we like, that\u0027d be a sufficient workaround.\n\n\u003e I discussed this with zimbatm on IRC recently and he also agreed that the nested envrc files are not a good pattern and that people should explicitly enter shells when they want them. About that, ...\n\nWe also rely on the top-level `.envrc` to bring `mg` into scope. By that same logic, do you want to drop the top-level one too, and people need to mg shell once when they enter depot?",
      "parentUuid": "d66ddc1e_5ee567bd",
      "revId": "e94cf1993f4e5b084ecbc2a3937da2907e3e4e1e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dccf987b_293c254a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-12-06T22:48:46Z",
      "side": 1,
      "message": "\u003e By that same logic\n\nThat\u0027s not the same logic. Direnv is supposed to provide some repository-wide helper tools, and I think initially it wasn\u0027t even for that (.envrcs weren\u0027t supposed to be shared).\n\n\u003e If we come up with a mg shell hook or something\n\nI think it shouldn\u0027t be too hard for you to write one, just hook it into the prompt command of your shell or something like that.",
      "parentUuid": "79bdb818_f09e6e3d",
      "revId": "e94cf1993f4e5b084ecbc2a3937da2907e3e4e1e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}