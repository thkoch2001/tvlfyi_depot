{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d0967716_02df39a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-09-01T09:47:44Z",
      "side": 1,
      "message": "Hm, a few thoughts:\n\n1. I don\u0027t really like the use of hooks here. We already have hooks on the agent level and this makes things a little more confusing. Could be solved by duplicating the path or setting it as a Buildkite build variable.\n\n2. I\u0027m not sure if this is an improvement overall. Personally I\u0027m fine with the fallback to evaluation (GC currently only happens ~once per week). The evaluation fallback also makes it easier to distribute this to other machines if there are more agents (which would be a problem with this, I think?). What are your thoughts?",
      "revId": "f7d48ef7fbf70d6691492a7d970dfdb45f0879f8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d7eaeba_a567eb50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2021-09-01T12:10:48Z",
      "side": 1,
      "message": "\u003e I don\u0027t really like the use of hooks here.\n\nThat\u0027s fair, I was under the impression from the Buildkite documentation that this is the nicest way to avoid duplicating the path (maybe I missed something?), but we don\u0027t have to do this of course. Also it is probably unnecessary to delete the gc root in the static pipeline since it is quite unlikely that it would exist when it is executed.\n\n\u003e The evaluation fallback also makes it easier to distribute this to other machines if there are more agents (which would be a problem with this, I think?).\n\nAs long whitby runs the evaluation and is set up as a binary cache on all agent machines, they would be able to substitute the .drv files from cache.tvl.su. To me solving it this way just felt cleaner, but that\u0027s about it: Worst case in terms of time to reevaluate was about 20s (for some NixOS machine), so something we can live with in case it happens occasionally.\n\nWe mostly get rid of a weird quirk and a very seldomly taken code path by solving the problem “properly” (by messing around with Nix internal, naturally).",
      "parentUuid": "d0967716_02df39a4",
      "revId": "f7d48ef7fbf70d6691492a7d970dfdb45f0879f8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b438f98_8739c18b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2021-09-01T22:08:14Z",
      "side": 1,
      "message": "abstaining from reviewing this - I don\u0027t really feel like I have strong enough opinions",
      "revId": "f7d48ef7fbf70d6691492a7d970dfdb45f0879f8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}