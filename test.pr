#!/usr/bin/env -S syndicate-server --config

let ?nixStepDetail = {
    import: "<nixpkgs>"
    lookupPath: [
      "nixpkgs=/home/repo/nixpkgs/channel",
      "nixos-config=/etc/nixos/configuration.nix",
      "/nix/var/nix/profiles/per-user/root/channels",
    ]
    store: "auto"
  }

<q <service nix-repo $nixStepDetail>>
? <a <service nix-repo $nixStepDetail> <accepted ?repo>> $repo [
  ? { hello: { meta: { homepage: ?x } } } [
    $log ! <log "nix-repo" {line: $x }>
  ]
  ? { nim: ?nim } [
    ? { nim: { passthru: ?passthru } } [
      ? { nim: { passthru: { nim: { buildInputs: [ ?bi ] } } } } [
        $log ! <log "nim" { line: $nim passthru: $passthru first-build-input: $bi } >
      ]
    ]
  ]
]

# Service instantiation.
? <q <service nix-repo ?detail>> [
  $log ! <log "service" { line: "nix-repo service requested" }>
  <require-service <daemon nix-actor>>
  ? <service-object <daemon nix-actor> ?obj> [
    let ?rewriter = <* $config [<rewrite ?resp <a <service nix-repo $detail> $resp>>]>
    $obj <resolve <nix-repo $detail> $rewriter>
  ]
]

# The authors build system creates this file.
<require-service <config-watcher "/home/emery/src/config/built/nix-actor.pr" $.>>

? <built nix-actor ?path ?sum> [
  <daemon nix-actor {
    argv: [ $path ]
    clearEnv: #t
    env: {
      BUILD_SUM: $sum
    }
    protocol: application/syndicate
  }>
]
