#!/usr/bin/env -S syndicate-server --control --config

let ?nix-actor = dataspace

# $nix-actor
# ? ?any
# [
#   $log ! <log "nix-actor" { "+++": $any } >
#   ?- [ $log ! <log "nix-actor" { "---": $any } > ]
# ]

<require-service <relay-listener <unix "/tmp/nix-actor.socket"> $gatekeeper>>
<bind <ref { oid: nix-actor key: #x"" }> $nix-actor #f>

let ?nix-cache = dataspace

let ?parent-route = <route
    [ <tcp "::1" 2048> ]
    <ref {oid: migrant, sig: #[eEwGnA6QbsH2kwkfDAoxpQ]}>>

let ?resolve-parent = <resolve-path $parent-route>

<q $resolve-parent>
$log ! <log "test" { line: <q $resolve-parent> }>

? <a $resolve-parent <error ?err>> [
  $control ! <exit 2>
]

? <a $resolve-parent <ok <resolved-path _ _ ?parent>>>
[
  $parent += <require-service <service notifier {}>>
  $parent
  ? <service-object <service notifier {}> <ok ?notifier>>
  [
    @"Load test behavior."
    $config += <require-service <config-watcher "./tests" {
        config: $config
        control: $control
        log: $log
        nix-cache: $nix-cache
        notifier: $notifier
      }>>
  ]
]

@"Service instantiation."
<nix-provide-service nix-repo>
<nix-provide-service nix-store>
<nix-provide-service nix>

? <nix-provide-service ?label>
[
  $log ! <log "nix-actor" { line: "service provisioning requested" label: $label }>
  ? <run-service <service $label ?detail>>
  [
    let ?result = <* $config [ <or [
        <rewrite <accepted ?body> <service-object <service $label $detail>    <ok $body>>>
        <rewrite <rejected ?body> <service-object <service $label $detail> <error $body>>>
      ]> ]>

    $log ! <log "nix-actor" { line: "require-service request" label: $label }>
    $nix-actor <resolve <$label $detail> $result>
  ]
]
