{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "63c4348f_c4996eda",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-09-04T12:24:26Z",
      "side": 1,
      "message": "I think the name implies that it resolves an uninitialised value despite it actually resolving an initialised value â€“ accounting for any uninitialised ones.",
      "range": {
        "startLine": 188,
        "startChar": 69,
        "endLine": 188,
        "endChar": 83
      },
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "446333c6_44b20d2c",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-04T17:39:01Z",
      "side": 1,
      "message": "Yeah, this is replaced by a method that calculates the runtime stack index of a local later on, which has much clearer naming and semantics.",
      "parentUuid": "63c4348f_c4996eda",
      "range": {
        "startLine": 188,
        "startChar": 69,
        "endLine": 188,
        "endChar": 83
      },
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e241d859_04e48668",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-09-04T12:24:26Z",
      "side": 1,
      "message": "I think we can do this more efficiently since the locals vector should be ordered by depth.",
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83b01508_83fadb91",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-04T17:39:01Z",
      "side": 1,
      "message": "The initialisation status becomes an explicit field later on and we filter on that, up to the local that we are looking for. I don\u0027t think the depth helps us with that though, as any of the locals up to the one we\u0027re calculating a slot for could be uninitialised (at any depth).",
      "parentUuid": "e241d859_04e48668",
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ec534e3_f640f5e9",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 610,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-09-04T12:24:26Z",
      "side": 1,
      "message": "Seems like it is only possible with inherit (from):\n\n    nix-repl\u003e let inherit y; in 12\n    error: undefined variable \u0027y\u0027 at (string):1:4\n\n    nix-repl\u003e let inherit (y) y; in y\n    error: infinite recursion encountered, at (string):1:14\n\nWe could make that case fail in the compiler already in theory if we wanted to.",
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aa1dabd_1e3332c0",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 878,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-09-04T12:24:26Z",
      "side": 1,
      "message": "not local?",
      "range": {
        "startLine": 878,
        "startChar": 65,
        "endLine": 878,
        "endChar": 72
      },
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2b6e46c_ea6c019b",
        "filename": "tvix/eval/src/compiler/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 878,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-04T17:39:51Z",
      "side": 1,
      "message": "by \"self-recursion\" here I meant \"accessing something from \u0027later\u0027 in the same scope\", you\u0027ll see how this works when we get to deferred upvalues",
      "parentUuid": "5aa1dabd_1e3332c0",
      "range": {
        "startLine": 878,
        "startChar": 65,
        "endLine": 878,
        "endChar": 72
      },
      "revId": "77e53f99c9bfeca73f8f1618fefb833604e5bea8",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}