{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d9d7f3f5_2b69221b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2022-10-10T03:24:25Z",
      "side": 1,
      "message": "LGTM except that in a large number of situations `path_clean` does not do the same thing as cppnix\u0027s `canonPath()`.  We should call attention to this so it isn\u0027t forgotten.",
      "revId": "6b5aeb75a9ec1bf887395cd2cae786368ae1eff2",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93de3051_1b171df3",
        "filename": "tvix/eval/src/vm.rs",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2022-10-10T03:24:25Z",
      "side": 1,
      "message": "I\u0027m pretty sure this is not right... `path_clean` uses some rules from Go which are totally different from what cppnix does:\n\nhttps://docs.rs/path-clean/latest/path_clean/\n\n... but I\u0027m having trouble figuring out how to run the nix_oracle tests.  `cargo test --features nix_tests` doesn\u0027t seem to run them.\n\ncppnix calls this \"`canonPath()`\".  If this is just a placeholder we should probably mention that the behavior disagrees.  I\u0027m sure this will crop up later but maybe it\u0027s not the top priority right now?\n\nAlso, cppnix seems to invoke it at parse time (and other times) rather than concatenation-time.",
      "revId": "6b5aeb75a9ec1bf887395cd2cae786368ae1eff2",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a5e642d_1204c8dd",
        "filename": "tvix/eval/src/vm.rs",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2022-10-10T03:29:19Z",
      "side": 1,
      "message": "\u003e I\u0027m pretty sure this is not right... `path_clean` uses some rules from Go which are totally different from what cppnix does:\n\u003e \n\u003e https://docs.rs/path-clean/latest/path_clean/\n\n\nThis is kinda already established as of https://cl.tvl.fyi/c/depot/+/6186, I feel like it\u0027s a reasonable stop-gap solution until the differences become enough for us to worry about. I\u0027m certainly happy to call it out via a TODO though\n\n\u003e ... but I\u0027m having trouble figuring out how to run the nix_oracle tests.  `cargo test --features nix_tests` doesn\u0027t seem to run them.\n\n`cargo test` will definitely run them (they\u0027re bin tests, not lib tests) - but you can focus them with:\n\n```\n‚ùØ cargo test --test nix_oracle\n   Compiling tvix-eval v0.1.0 (/home/grfn/code/depot/tvix/eval)\n    Finished test [unoptimized + debuginfo] target(s) in 1.93s\n     Running tests/nix_oracle.rs (target/debug/deps/nix_oracle-588e7f4e8954d3a9)\n\nrunning 4 tests\ntest literal_int ... ok\ntest add_lists ... ok\ntest add_ints ... ok\ntest add_paths ... ok\n\ntest result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.09s\n```",
      "parentUuid": "93de3051_1b171df3",
      "revId": "6b5aeb75a9ec1bf887395cd2cae786368ae1eff2",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad833529_6772406c",
        "filename": "tvix/eval/src/vm.rs",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-10-10T10:15:41Z",
      "side": 1,
      "message": "It\u0027s probably close enough, but we probably should have a second look some time. At least C++ Nix does canonicalize the path in this situation, in my estimate it\u0027d be a bigger problem if we introduced a `clean()` somewhere where there isn\u0027t one in C++ Nix. E.g. `./foo + \"/.\" \u003d\u003d ./foo`.",
      "parentUuid": "0a5e642d_1204c8dd",
      "revId": "6b5aeb75a9ec1bf887395cd2cae786368ae1eff2",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51d767e3_e700c286",
        "filename": "tvix/eval/tests/nix_oracle.rs",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2022-10-10T10:15:41Z",
      "side": 1,
      "message": "Would be nice to have a case for this in the regular test suite as well.",
      "revId": "6b5aeb75a9ec1bf887395cd2cae786368ae1eff2",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}