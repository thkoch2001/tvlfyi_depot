{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d7d984_c9be70ba",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-24T16:14:02Z",
      "side": 1,
      "message": "Needs some more description about what it does exactly, w.r.t. directory closures.",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06e6e1df_858f3b24",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-24T16:14:02Z",
      "side": 1,
      "message": "comment back in?",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30e560a4_95fa4774",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1000106
      },
      "writtenOn": "2024-06-12T15:39:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06e6e1df_858f3b24",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32f0da26_66f25d89",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-24T16:14:02Z",
      "side": 1,
      "message": "can we make the stream peekable and then peek to decide how to branch, instead of manually pulling the first element, then manually emitting the first ekement, then chaining with the rest?",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a08b29_cac4fee5",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000106
      },
      "writtenOn": "2024-06-14T15:33:19Z",
      "side": 1,
      "message": "This introduces more heap allocations and cloning, but sure... Done!",
      "parentUuid": "32f0da26_66f25d89",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2b1767a_d76b0f5e",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-24T16:14:02Z",
      "side": 1,
      "message": "do we need left_stream/right_stream here, or can we just return a boxed stream from both match branches?",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84bca3dc_baeecd39",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000106
      },
      "writtenOn": "2024-06-11T12:23:06Z",
      "side": 1,
      "message": "The Box returned at the top level of this function always contains a TryFlattenStream[1], so this is at another level. Boxing here would mean it\u0027s boxed twice at a runtime penalty.\n\n[1] https://docs.rs/futures/latest/futures/future/struct.TryFlattenStream.html",
      "parentUuid": "c2b1767a_d76b0f5e",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19762c2c_21e202c8",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-06-12T20:15:45Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "84bca3dc_baeecd39",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e85f3b99_52a7fa1a",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-24T16:14:02Z",
      "side": 1,
      "message": "can we have more speaking names for these, and a comment explaining what we do here?\n\ncopy1 is the closure validator we use to validate the directories we receive from copy1, copy2 is a vec where we append copies to in insertion order, and what we return to the client later.",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d09d6ba_26d9a6d2",
        "filename": "tvix/castore/src/directoryservice/combinators.rs",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1000106
      },
      "writtenOn": "2024-06-12T15:39:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e85f3b99_52a7fa1a",
      "revId": "bb2529225d72e0c85c4d2d2a7ee79aa1db2b6773",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}