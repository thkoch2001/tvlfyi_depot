{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0b1c9df2_18078f70",
        "filename": "/COMMIT_MSG",
        "patchSetId": 34
      },
      "lineNbr": 1,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-22T10:55:57Z",
      "side": 1,
      "message": "clippy and glue builds are currently red, please fix.",
      "revId": "9058b0325629bf358c8104b34da260b5ee52034c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f29c6853_f8ccf817",
        "filename": "tvix/glue/src/builtins/mod.rs",
        "patchSetId": 34
      },
      "lineNbr": 37,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-22T10:55:57Z",
      "side": 1,
      "message": "Can you flip the two things?\n\n// TODO(raitobezarius): evaluate expressing `filterSource` as Nix code using `path` (b/372)",
      "revId": "9058b0325629bf358c8104b34da260b5ee52034c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cccce8c_bbce2acf",
        "filename": "tvix/glue/src/builtins/mod.rs",
        "patchSetId": 34
      },
      "lineNbr": 358,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-22T10:55:57Z",
      "side": 1,
      "message": "What\u0027s an invalid symlink? For tvix-castore, the symlink target is just a byte sequence. Whether it\u0027s resolving to an existing or non-existing path depends on runtime things, like where it\u0027s mounted at and whether the other location exists or not.",
      "range": {
        "startLine": 358,
        "startChar": 179,
        "endLine": 358,
        "endChar": 186
      },
      "revId": "9058b0325629bf358c8104b34da260b5ee52034c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a03b4bac_08c4e7cc",
        "filename": "tvix/glue/src/builtins/mod.rs",
        "patchSetId": 34
      },
      "lineNbr": 396,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-22T10:55:57Z",
      "side": 1,
      "message": "some",
      "range": {
        "startLine": 396,
        "startChar": 45,
        "endLine": 396,
        "endChar": 57
      },
      "revId": "9058b0325629bf358c8104b34da260b5ee52034c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4153ad0_60207537",
        "filename": "tvix/glue/src/builtins/mod.rs",
        "patchSetId": 34
      },
      "lineNbr": 400,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-22T10:55:57Z",
      "side": 1,
      "message": "Add a line \"all tests filter out these unsupported (not representable in castore) nodes\", confirming invalid, but filtered-out nodes don\u0027t prevent ingestion of a path.",
      "revId": "9058b0325629bf358c8104b34da260b5ee52034c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93a89641_fe4f0288",
        "filename": "tvix/glue/src/builtins/mod.rs",
        "patchSetId": 34
      },
      "lineNbr": 427,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-22T10:55:57Z",
      "side": 1,
      "message": "Please also need a test that does try to ingest a path with one of the invalid file types, and ensure it fails, but doesn\u0027t crash.",
      "revId": "9058b0325629bf358c8104b34da260b5ee52034c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}