{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2fb61ed_78f4d550",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-02-04T17:18:23Z",
      "side": 1,
      "message": "can I give you a section on benchmark regression testing?",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a9aaaf3_06e9e67d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-04T17:25:17Z",
      "side": 1,
      "message": "Yes please, indeed I forgot that. looking at the git history was just too much, I just started writing and adding new sections whenever anything came into my mind. It\u0027d probably fit somewhere close to the regression testing bits.\n\nMaybe we should add a small paragraph explaining we\u0027re not going too deep into benchmarking and perf tuning until we verified to be correct with nixpkgs.\n\nCan you post it as a comment here?",
      "parentUuid": "d2fb61ed_78f4d550",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd8a96d7_454fc880",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-08T19:01:16Z",
      "side": 1,
      "message": "As discussed on IRC, I provided a draft for review.",
      "parentUuid": "3a9aaaf3_06e9e67d",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e71a0b8_671baa97",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-02-04T16:48:37Z",
      "side": 1,
      "message": "Maybe link http://program-transformation.org/Tools/ATermFormat.html.",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55eae333_5938e6ef",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-08T13:22:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e71a0b8_671baa97",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97a64754_6ecf92bd",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-04T17:25:17Z",
      "side": 1,
      "message": "*for sled",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d8237d8_03e38e10",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-08T13:22:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97a64754_6ecf92bd",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1843e193_5a5fea23",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-04T16:33:28Z",
      "side": 1,
      "message": "@tvl@lahfa.xyz @sternenseemann@systemli.org is this something you could fill in?",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f91a581f_4d405416",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-02-04T16:48:37Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "1843e193_5a5fea23",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2893a4e2_d99b15cf",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-04T17:25:17Z",
      "side": 1,
      "message": "Can you post it as a comment here? Happy to integrate it.",
      "parentUuid": "f91a581f_4d405416",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07d5733e_3f00365c",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-02-08T14:20:36Z",
      "side": 1,
      "message": "As you may know, Nix has a limited exception system for dealing\nwith user-generated errors: `builtins.tryEval` can be used to\ndetect if an expression fails if `builtins.throw` or `assert` are\nused to generate it. This feature requires extra support in any\nNix implementation, as errors may not necessarily cause the Nix\nprogram to abort.\n\nThe C++ Nix implementation just reuses the language-provided\nException system for `builtins.tryEval` which Tvix can\u0027t\n(even if Rust had an equivalent system): In C++ Nix the runtime\nrepresentation of the program in execution corresponds to the Nix\nexpression tree of the relevant source files. This means that an\nexception raised in C++ code will automatically bubble up\ncorrectly since the C++ and Nix call stacks are equivalen to each\nother. Tvix compiles the Nix expressions to a byte code program\nwhich may be mutated by extra optimization rules (for example, we\nhope to eliminate as many thunks as possible in the future). This\nmeans that such a correspondence between Nix and the (in this\ncase) VM runtime is not guaranteed.\n\nPreviously, `builtins.tryEval` (which is implemented in Rust and\ncan access VM internals) just allowed the VM to recover from\ncertain kinds of errors. This proved to be insufficient as it\n[blew up as soon as `builtins.tryEval`-ed thunk is forced\nagain](https://b.tvl.fyi/issues/281)—extra bookkeeping was\nneeded. As a solution, we now store thunk evaluation errors that\ncan be recovered from as `Value::Catchable` which mitigates this\nproblem.\n\nAs you can imagine, storing evaluation failures as “normal”\nvalues quickly leads to all sorts of bugs because most\nVM/`builtins` code is written with only ordinary values like\nattribute sets, strings etc. in mind. While ironing those out, we\nmade sure to supplement those fixes with as many test cases for\n`builtins.tryEval` as possible. This will hopefully prevent any\nregressions if or rather when we touch this system again. We\nalready have some ideas for replacing the `Catchable` value type\nwith a cleaner representation.\n\n---\n\nToo long?",
      "parentUuid": "2893a4e2_d99b15cf",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe45dc3b_24ec86e5",
        "filename": "web/tvl/blog/2024-02-tvix-update.md",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-02-08T15:08:04Z",
      "side": 1,
      "message": "No no, this is okay. I reflowed, formatted and added it to this CL. Thanks!",
      "parentUuid": "07d5733e_3f00365c",
      "revId": "b7e03e92f2b790ede647fa61bac6db53dd5f7977",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}