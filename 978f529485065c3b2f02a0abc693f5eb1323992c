{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ee9490ed_e4707e7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "LGTM on the stuff I touched.",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a9db296_148fbbe8",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 207,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "@flokli@flokli.de we went through the discussion of naming on this and it\u0027s back to something that does not contain the word `context`, is that fine to you? I personally don\u0027t care.",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62e2327e_74755842",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 207,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:41Z",
      "side": 1,
      "message": "why do we need the word context here? that\u0027s obvious from the type of the secondd argument",
      "parentUuid": "5a9db296_148fbbe8",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30cb9797_98fe5330",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 207,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-21T15:44:06Z",
      "side": 1,
      "message": "Well, if you don\u0027t have types around, arguably, this would be nicer for code review.",
      "parentUuid": "62e2327e_74755842",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "353f571d_a65911ad",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 361,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "you can drop this I think now",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f2c5e2f_c38e659f",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 361,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "353f571d_a65911ad",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93bea8b3_8a44bbe5",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 407,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "Not sure if I understand that now there\u0027s `into_parts`, `from_parts` and `new_inherit_context_from`, cc @flokli@flokli.de",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3c2bfac_1f958851",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 407,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "This is all done primarily to avoid unnecessary cloning",
      "parentUuid": "93bea8b3_8a44bbe5",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16d64b27_0a98cb9a",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 1311,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "can be dropped",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3fb36a0_6bf7a654",
        "filename": "tvix/eval/src/builtins/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 1311,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16d64b27_0a98cb9a",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b23ce703_7accacbf",
        "filename": "tvix/eval/src/builtins/versions.rs",
        "patchSetId": 23
      },
      "lineNbr": 61,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "Can you add a TODO here that we iterate by byte? C++ Nix can do this even if non-unicode garbage is in the string, so it\u0027d be neat to also be able to do so, although it is a niche occurrence probably.",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6077ee08_e87bb0c6",
        "filename": "tvix/eval/src/builtins/versions.rs",
        "patchSetId": 23
      },
      "lineNbr": 61,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b23ce703_7accacbf",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b733ce3_cee79a83",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 23
      },
      "lineNbr": 181,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "typo: encountered",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "617cc57b_b04f8d5d",
        "filename": "tvix/eval/src/errors.rs",
        "patchSetId": 23
      },
      "lineNbr": 181,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b733ce3_cee79a83",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17478a19_0c8f7f36",
        "filename": "tvix/eval/src/value/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 345,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "I think this comment is addressed by your change?",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99ba3e6e_a36ffb06",
        "filename": "tvix/eval/src/value/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 345,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17478a19_0c8f7f36",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "262583de_65e66805",
        "filename": "tvix/eval/src/value/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 398,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "Should we use `B(\"\")` here or does that not matter w.r.t. optimization?",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4310d671_ee5981c1",
        "filename": "tvix/eval/src/value/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 398,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "it can\u0027t matter - we have to return a BString here no matter what, so we always have to allocate on the heap (though i doubt this *really* matters)",
      "parentUuid": "262583de_65e66805",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5b91aa4_936081e7",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 5,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "Doesn\u0027t this reference the previous use of `Box\u003cstr\u003e`? Maybe needs updating.",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b144c42_30e3ed3f",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 5,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5b91aa4_936081e7",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae11861e_6536614f",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 215,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "`Self`?",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b0deb37_033b89c8",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 215,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae11861e_6536614f",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c83b6a4_384eadc3",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 219,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "Does it make sense keeping this instance if it is no longer the internal representation of `NixString`? The appeal of this before would have been that it\u0027s basically free, but not anymore, right?",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5683a9e6_e9e8b663",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 219,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c83b6a4_384eadc3",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14cbffcc_3e2f805f",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 294,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-20T08:15:40Z",
      "side": 1,
      "message": "I\u0027d be careful with this, it\u0027s very easy to discard the context here by accident, if we deref to BString and then .into() a NixString again.\n\nI\u0027d prefer this to be more explicit, but also ok to be convinced otherwise.",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d1038be_cffb4ba7",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 294,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "I think that kind of \"avoid doing a thing by accident\" stuff should be covered by tests - not having this here is *really* annoying and verbose at the call site.",
      "parentUuid": "14cbffcc_3e2f805f",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e63ebb9_8e1f0dee",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 324,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-20T08:15:40Z",
      "side": 1,
      "message": "The aim was to keep the NixContext type somewhat private, and have operations on NixString take care of contexta as much as possible.\n\nAlso see how you previously couldn\u0027t really *access* the context, just iterate over some of its elements.\n\nSo it could at some point be put into a feature flag.",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfadbe76_803fc77b",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 324,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "The type of the function is equivalent before and after, so I don\u0027t think this is relevant to this CL.",
      "parentUuid": "3e63ebb9_8e1f0dee",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baa1ecdd_770eccf4",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 324,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Also, having `into_parts` and `from_parts` avoids a fair bit of unnecessary cloning",
      "parentUuid": "bfadbe76_803fc77b",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5af7ceed_d5317ab4",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 324,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-21T21:53:51Z",
      "side": 1,
      "message": "Where did into_parts go? I don\u0027t find it anymore in this CL.",
      "parentUuid": "baa1ecdd_770eccf4",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad423e4_bb5cf03b",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 364,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "Technically, `nix_escape_string()` is a byte array -\u003e byte array transformation, but I\u0027m happy to push these changes to a later issue/CL, since it kind of requires thinking about another can of worms entirely (whether printing should just vomit bytes, since that\u0027d be technically correct if you want output to be equivalent to the expression that produced it in as many cases as possible…).",
      "range": {
        "startLine": 364,
        "startChar": 29,
        "endLine": 364,
        "endChar": 46
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "428bc424_c1c6fb8a",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 364,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "yeah, I\u0027d like to push this off",
      "parentUuid": "8ad423e4_bb5cf03b",
      "range": {
        "startLine": 364,
        "startChar": 29,
        "endLine": 364,
        "endChar": 46
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c89fe700_d1027b03",
        "filename": "tvix/eval/src/value/string.rs",
        "patchSetId": 23
      },
      "lineNbr": 364,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-21T16:52:01Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "428bc424_c1c6fb8a",
      "range": {
        "startLine": 364,
        "startChar": 29,
        "endLine": 364,
        "endChar": 46
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ad608ea_776990c6",
        "filename": "tvix/eval/src/vm/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 990,
      "author": {
        "id": 1000073
      },
      "writtenOn": "2024-01-20T00:32:19Z",
      "side": 1,
      "message": "can be dropped",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd663447_38987f36",
        "filename": "tvix/eval/src/vm/mod.rs",
        "patchSetId": 23
      },
      "lineNbr": 990,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ad608ea_776990c6",
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfc84c25_a78bea70",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 139,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "@flokli@flokli.de This should also use byte strings in the future, I\u0027d say—it\u0027s always an ASCII sequence.\n\nSame goes for a lot of derivation stuff though I\u0027m not sure maybe a little thinking about windows is required.",
      "range": {
        "startLine": 139,
        "startChar": 26,
        "endLine": 139,
        "endChar": 42
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd9ef614_b6c3c0c8",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 139,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-21T21:53:51Z",
      "side": 1,
      "message": "output names have stricter restrictions even. it\u0027s a subset of StorePath.name, see https://cs.tvl.fyi/depot/-/blob/tvix/nix-compat/src/derivation/validate.rs?L30\n\nI wonder if that\u0027s a TODO for me to factor out and apply the same checks here.",
      "parentUuid": "dfc84c25_a78bea70",
      "range": {
        "startLine": 139,
        "startChar": 26,
        "endLine": 139,
        "endChar": 42
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79dbc2d6_665a50b6",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 139,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-21T22:49:00Z",
      "side": 1,
      "message": "Agree.\n\n\u003e I wonder if that\u0027s a TODO for me to factor out and apply the same checks here.\n\nThe problem with being so modular is that you probably have to check this at multiple boundaries, i.e. `derivation` shouldn\u0027t accept it, but also at the RPC boundary it should probably be re-checked.",
      "parentUuid": "bd9ef614_b6c3c0c8",
      "range": {
        "startLine": 139,
        "startChar": 26,
        "endLine": 139,
        "endChar": 42
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e609adb1_e73b9dc1",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 254,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "Why do we this here, but `s.to_str()?.to_owned()` elsewhere?",
      "range": {
        "startLine": 254,
        "startChar": 51,
        "endLine": 254,
        "endChar": 79
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0ba8c20_43a9c402",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 254,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "the latter is faster, actually, so I updated this.",
      "parentUuid": "e609adb1_e73b9dc1",
      "range": {
        "startLine": 254,
        "startChar": 51,
        "endLine": 254,
        "endChar": 79
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "061917e4_1f2dc940",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 287,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2024-01-20T20:14:04Z",
      "side": 1,
      "message": "I think a DerivationSafeString wrapper would be nice which checks the drv path requirements (subset of ASCII) upon construction, then a lot of lossy conversion can go away here.",
      "range": {
        "startLine": 287,
        "startChar": 56,
        "endLine": 287,
        "endChar": 73
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7d669ab_cdde507e",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 287,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-01-21T15:40:00Z",
      "side": 1,
      "message": "yeah, that\u0027d be nice",
      "parentUuid": "061917e4_1f2dc940",
      "range": {
        "startLine": 287,
        "startChar": 56,
        "endLine": 287,
        "endChar": 73
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d4344a2_7f41d892",
        "filename": "tvix/glue/src/builtins/derivation.rs",
        "patchSetId": 23
      },
      "lineNbr": 287,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-01-21T21:53:51Z",
      "side": 1,
      "message": "We already have a type for that, these things are called StorePath (with a .drv suffix) ;-)\n\nThere\u0027s an open bug about making Derivation accept StorePath(Ref), but we need to have a generic prototype accepting strings (that\u0027s used for the hash derivation modulo calculation). https://b.tvl.fyi/issues/264 has some info, and there\u0027s a somewhat stale CL, but no matter what, that\u0027s followup material.",
      "parentUuid": "c7d669ab_cdde507e",
      "range": {
        "startLine": 287,
        "startChar": 56,
        "endLine": 287,
        "endChar": 73
      },
      "revId": "978f529485065c3b2f02a0abc693f5eb1323992c",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}