{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7b9c2ff1_f9140b2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-06-27T04:44:57Z",
      "side": 1,
      "message": "This feels more like something that should be elsewhere than in mg. mg isn\u0027t really Gerrit specific.\n\nmg works entirely without a .git repository, as long as MG_ROOT is set.",
      "revId": "a17e271d1acd618892b8468767618d4c736bf5b9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5413562_e5c6ecde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2023-06-27T14:36:03Z",
      "side": 1,
      "message": "Well “monorepos that are modeled after the tvl depot” and it is not really gerrit specific, we have a custom setup for it that doesn\u0027t really depend on the review tool.\n\nWe could, I guess recompute the r number from the revcount to make it totally independent of repo setup (e.g. you need to configure git explicitly to fetch the r/ refs).",
      "parentUuid": "7b9c2ff1_f9140b2d",
      "revId": "a17e271d1acd618892b8468767618d4c736bf5b9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fea6be24_cd7df8eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-06-27T15:59:35Z",
      "side": 1,
      "message": "So far mg was mostly another CLI to bring bazel-like commands and target syntax for worktrees with readTree, which could at some point end up in tvix/Nix directly \n\nI feel like suddenly poking around in the git history should be another tool.",
      "parentUuid": "f5413562_e5c6ecde",
      "revId": "a17e271d1acd618892b8468767618d4c736bf5b9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0166c76_bf2ac545",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-06-29T09:28:16Z",
      "side": 1,
      "message": "I think this should effectively shell out to `git rev-list --count --first-parent HEAD` instead (which is pretty much instant, and doesn\u0027t require the rev fetching setup - which almost nobody has).\n\nIt should probably check that the commit is mainlined first (e.g. `git merge-base --is-ancestor HEAD origin/canon`).",
      "revId": "a17e271d1acd618892b8468767618d4c736bf5b9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dba8659_9ea9b701",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2023-07-01T09:49:17Z",
      "side": 1,
      "message": "I\u0027ve made a git subcommand instead which I think should be a decent alternative.",
      "parentUuid": "d0166c76_bf2ac545",
      "revId": "a17e271d1acd618892b8468767618d4c736bf5b9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad405b43_adabed42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-07-01T10:04:51Z",
      "side": 1,
      "message": "Yes, I like this way more. thanks!",
      "parentUuid": "4dba8659_9ea9b701",
      "revId": "a17e271d1acd618892b8468767618d4c736bf5b9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}