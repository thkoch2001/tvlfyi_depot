{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60a47961_325b70ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-13T09:55:23Z",
      "side": 1,
      "message": "Some improvements to the tag library that make the examples easier.",
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886d8e3e_e31753d1",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-13T09:55:23Z",
      "side": 1,
      "message": "The `?`-syntax for tags is cute, although it kinda depends on the internal representation of tags.\n\n idk if it would be better to have a domain-specific function like `tag.isTag`, otoh I don’t think we can gain much by doing that?",
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe2c934_7803c97b",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2021-09-14T14:07:18Z",
      "side": 1,
      "message": "IMO the strength of //nix/tag is precisely this internal structure which allows us to use the ergonomic nix idioms like foo ? bar and foo.bar or null \u003d\u003d \"foo\". \n\nHiding this behind an API would make working with tags much more annoying.",
      "parentUuid": "886d8e3e_e31753d1",
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ca52b43_49393ee6",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-17T08:36:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dbe2c934_7803c97b",
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffcd37f8_814f923e",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-13T09:55:23Z",
      "side": 1,
      "message": "hrm. now I feel like we should really have a function for this.\n\nSomething like \n\n```\nmatchDef false {\n  symlink \u003d s: s \u003d\u003d \"directory\";\n  directory \u003d true;\n}\n```",
      "range": {
        "startLine": 103,
        "startChar": 37,
        "endLine": 103,
        "endChar": 84
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bf16ec5_82c6208d",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-17T08:36:05Z",
      "side": 1,
      "message": "I’d like to introduce this function and change the example, then I think this one is good.",
      "parentUuid": "ffcd37f8_814f923e",
      "range": {
        "startLine": 103,
        "startChar": 37,
        "endLine": 103,
        "endChar": 84
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a5c1b04_eb7f366f",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2021-09-18T12:44:40Z",
      "side": 1,
      "message": "I think doing that is valid and even idiomatic nix. Having a specific function for tags is surely nice, but I think we can add that later and update the example",
      "parentUuid": "1bf16ec5_82c6208d",
      "range": {
        "startLine": 103,
        "startChar": 37,
        "endLine": 103,
        "endChar": 84
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00862ed2_9d56978b",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-20T12:58:50Z",
      "side": 1,
      "message": "I don’t think it’s very idiomatic, I can’t see what is happening at a glance.",
      "parentUuid": "3a5c1b04_eb7f366f",
      "range": {
        "startLine": 103,
        "startChar": 37,
        "endLine": 103,
        "endChar": 84
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "652aa6a1_6501198d",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2021-09-20T13:27:42Z",
      "side": 1,
      "message": "This is at least an idiom that is really used and not a library function you have to know about:\n\n$ ag -c \"or null(\\))? (\u003d\u003d|!\u003d)\"\nlib/modules.nix:1\nmaintainers/scripts/rebuild-amount.sh:1\nnixos/lib/make-zfs-image.nix:1\nnixos/lib/make-disk-image.nix:2\nnixos/lib/testing-python.nix:1\nnixos/modules/services/networking/nsd.nix:1\nnixos/modules/virtualisation/amazon-options.nix:1\npkgs/applications/networking/browsers/firefox/common.nix:1\npkgs/build-support/buildenv/default.nix:1\npkgs/development/haskell-modules/lib.nix:1\npkgs/development/haskell-modules/make-package-set.nix:1\npkgs/development/interpreters/perl/default.nix:1\npkgs/development/libraries/libjpeg-turbo/default.nix:1\npkgs/games/planetaryannihilation/default.nix:2\npkgs/stdenv/generic/make-derivation.nix:2",
      "parentUuid": "00862ed2_9d56978b",
      "range": {
        "startLine": 103,
        "startChar": 37,
        "endLine": 103,
        "endChar": 84
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b79cf460_e3a63f6c",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2021-10-02T18:24:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "652aa6a1_6501198d",
      "range": {
        "startLine": 103,
        "startChar": 37,
        "endLine": 103,
        "endChar": 84
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a7dde09_8128b77f",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-13T09:55:23Z",
      "side": 1,
      "message": "This would need a `tag.tagName`",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 55
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fb84d6b_9032841a",
        "filename": "nix/utils/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2021-09-14T14:07:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a7dde09_8128b77f",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 55
      },
      "revId": "f7b501f08c8a56707f620a1471ada4e3bb2f0b4e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}