version 1 .

# Gatekeeper step to access nix-actor.
ResolveStep = <nix-actor @detail ResolveDetail> .
ResolveDetail = {
  # PATH to search for Nix utilities.
  command-path: [string ...]

  # Command line options.
  options: AttrSet

  # List of strings corresponding to entries in NIX_PATH.
  # For example:
  #  [ "nixpkgs=/nix/var/nix/profiles/per-user/root/channels/nixos"
  #    "nixos-config=/etc/nixos/configuration.nix"
  #    "/nix/var/nix/profiles/per-user/root/channels"
  #  ]
  lookupPath: [string ...]
} .

# Common error type.
Error = <error @message string>.

# Asserted to nix-actor.
# @expr is evaluated and asserted to @result
# with log lines messaged to @log.
Eval = <eval @expr string @result #:EvalResult> .
EvalResult = Error / EvalSuccess .
EvalSuccess = [@expr string @result any] .

# Asserted to nix-actor.
# @expr is instantiated to a store-derivation which is asserted to @result.
Instantiate = <instantiate @expr string @log #:string @result InstantiateResult> .
InstantiateResult = Error / Derivation .
Derivation = <drv @expr string @storePath string> .

# Asserted to nix-actor.
# The list of store-paths from realising @drv
# are asserted to @outputs as a list of strings.
Realise = <realise @drv string @log #:string @outputs #:Result> .
RealiseResult = Error / Outputs .
Outputs = <outputs @drv string @storePaths [string ...]> .

AttrSet = {symbol: any ...:...} .
