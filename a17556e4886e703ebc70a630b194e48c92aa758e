{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bca8f875_8881ff6d",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T00:51:47Z",
      "side": 1,
      "message": "I\u0027d probably move this much further down, below all the base types contained in the struct.",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94a231e1_43bf6cd6",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000161
      },
      "writtenOn": "2024-11-09T16:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bca8f875_8881ff6d",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22fd0547_285c79a6",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T00:51:47Z",
      "side": 1,
      "message": "can we be a bit more generic on which StorePath\u003c\u003e this works with?\n\nwe don\u0027t need to thread it though to UnkeyedValidPathInfo, but NixSerialize / NixDeserialize should work with more than just StorePath\u003cString\u003e.\n\nAlso see https://cl.tvl.fyi/c/depot/+/12744, in case you need to copy trait bounds from there.",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4da6bd5f_b557199c",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000161
      },
      "writtenOn": "2024-11-09T16:56:50Z",
      "side": 1,
      "message": "I may be wrong but from what I can tell it\u0027s non-trivial to implement NixDeserialize for anything other than `String` or `bytes::Bytes`, i.e. it\u0027s not possible to deserialize into StorePath\u003c\u0026str\u003e due to the fact that the `buf` returned from the reader does not outlive the body of try_deserialize(), so it has to be an owning type and I wonder if any type other than String would be useful in practice. But I may be missing something.\n\nThe other thing is, I generally tend to implement things when(and more importantly if) the need arises, how about we punt on this for now and see if we need it in the future?",
      "parentUuid": "22fd0547_285c79a6",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b77f1233_2bf9f38c",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T19:43:12Z",
      "side": 1,
      "message": "I was mostly curious about using smolstr for some store paths, not \u0026str.\n\nBut you\u0027re right, we can deal with this when/if we need it.",
      "parentUuid": "4da6bd5f_b557199c",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5f40b6b_d0a04666",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T00:51:47Z",
      "side": 1,
      "message": "same",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c5c9491_04ed82e2",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000161
      },
      "writtenOn": "2024-11-09T16:56:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5f40b6b_d0a04666",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1aef725_06fce61d",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T00:51:47Z",
      "side": 1,
      "message": "```suggestion\n// Writes StorePath or an empty string.\n```",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a6e9429_504b2852",
        "filename": "tvix/nix-compat/src/nix_daemon/types.rs",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000161
      },
      "writtenOn": "2024-11-09T16:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1aef725_06fce61d",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fb82091_56d50d33",
        "filename": "tvix/nix-compat/src/nixhash/ca_hash.rs",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T00:51:47Z",
      "side": 1,
      "message": "isn\u0027t this to_nixbase32_string?\n\nSee https://code.tvl.fyi/tree/tvix/nix-compat/src/narinfo/mod.rs#n362, I\u0027d prefer making this explicit on the callsite rather than introducing more Display for hashes, there\u0027s just too many different formats.",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15c354a7_dcfd33ca",
        "filename": "tvix/nix-compat/src/nixhash/ca_hash.rs",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000161
      },
      "writtenOn": "2024-11-09T16:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fb82091_56d50d33",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eea7385_054d7ea0",
        "filename": "tvix/nix-daemon/src/lib.rs",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-11-09T00:51:47Z",
      "side": 1,
      "message": "```suggestion\n            Some(path_info) \u003d\u003e Ok(Some(into_unkeyed_path_info(path_info))),\n```\n\nconsistency with other places",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ca0180d_5ad77667",
        "filename": "tvix/nix-daemon/src/lib.rs",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000161
      },
      "writtenOn": "2024-11-09T16:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eea7385_054d7ea0",
      "revId": "a17556e4886e703ebc70a630b194e48c92aa758e",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}