{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef0a6c3_05e4c6c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2022-12-12T08:58:36Z",
      "side": 1,
      "message": "I think this should be added to the README, not only the commit history. People tinkering with Tvix will inevitably run into having to do this, so it makes sense for it to be documented.",
      "revId": "1fd77832ef5e269b4d2d33fe68ba91efa5befd56",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6ea843e_dba8b0c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-12-12T09:14:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ef0a6c3_05e4c6c1",
      "revId": "1fd77832ef5e269b4d2d33fe68ba91efa5befd56",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b860ece3_a145edd9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2022-12-12T08:58:36Z",
      "side": 1,
      "message": "crate2nix isn\u0027t made available in the toplevel direnv, and it\u0027s also not available in an `mg shell //tvix:shell` after cl/7540\n\nWhenever we check in generated files, I feel like we should have CI to ensure the file doesn\u0027t get out of sync - see cl/7322 for an example.",
      "revId": "1fd77832ef5e269b4d2d33fe68ba91efa5befd56",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67137fd3_6575549d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-12-12T09:14:35Z",
      "side": 1,
      "message": "Generating these files in derivations (and by extension in IFD) is hard, and the only supported way (which is in the official crate2nix repo) apparently has some Nix \u003e2.5 (!) specific code which I don\u0027t have the time to rewrite/debug at the moment.\n\nI\u0027ll add crate2nix to the top-level direnv, we might start using it for other stuff, too.",
      "parentUuid": "b860ece3_a145edd9",
      "revId": "1fd77832ef5e269b4d2d33fe68ba91efa5befd56",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e32b250a_e0c49575",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2022-12-12T10:22:25Z",
      "side": 1,
      "message": "The second part of my comment was not about running crate2nix inside a derivation, but ensuring it\u0027s always up to date. Check cl/7322 again, we `mg run` that check, and ensure there\u0027s no dirty working tree.\n\nAlso, please add some documentation around this workflow to the //tvix README.\n\nConsidering this all is not just a `cargo build` / `cargo test` anymore, I feel like it makes sense to document the workflow.",
      "parentUuid": "67137fd3_6575549d",
      "revId": "1fd77832ef5e269b4d2d33fe68ba91efa5befd56",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca9d6cb1_6d576292",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2022-12-12T10:24:49Z",
      "side": 1,
      "message": "Sorry, I initially missed the now-existing docs on crate2nix (and now commented there), but not on the \"how to build and test this\" part.",
      "parentUuid": "e32b250a_e0c49575",
      "revId": "1fd77832ef5e269b4d2d33fe68ba91efa5befd56",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}