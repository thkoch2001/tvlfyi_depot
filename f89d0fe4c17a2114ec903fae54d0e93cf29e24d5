{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bbb482c2_1295f9ff",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2023-12-11T04:01:27Z",
      "side": 1,
      "message": "I would much rather pin the nixpkgs this uses, so that changing NIX_PATH in the environment can\u0027t muck with the benchmark results",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd278e0f_02387648",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-11T10:28:17Z",
      "side": 1,
      "message": "Agree.\n\nAlso, running the benchmarks inside of derivations helps eliminate extra degrees of freedom like this...",
      "parentUuid": "bbb482c2_1295f9ff",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9707bbb4_afcc352d",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-11T11:19:49Z",
      "side": 1,
      "message": "Wrapping inside a derivation prevents ambient env vars from leaking in, yes, but there\u0027s valid usecases where I want to run it outside a Nix derivation too.\n\nFor example, when comparing it with the previous `cargo bench` run, to locally reason about the impact of a refactor (see commit message).\n\nI think it using `NIX_PATH` for local benchmarks is in theory okay. They\u0027re not meant to be compare-able with CI results anyways, and once we run it in CI, `NIX_PATH` has to be set to something reproducible anyways.\n\nFor non-local benchmarks over longer periods of time, we should probably not (only) track nixpkgs that depot pins to (so we don\u0027t observe nixpkgs restructurings as eval perf changes).\n\nI changed it to `TVIX_BENCH_NIX_PATH`, set that in //tvix:shell, and point it to the depot nixpkgs, it\u0027s probably a good middle ground, though I don\u0027t think it matters much for the current use case.",
      "parentUuid": "dd278e0f_02387648",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5c8363f_afc728dd",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-11T13:10:55Z",
      "side": 1,
      "message": "I don\u0027t see why any of this prevents running the benchmark inside of a derivation.\n\nI\u0027ve been running the macrobenchmarks (cl/10216) in derivations and it works just fine.  Plus then you get a drvPath for the benchmark you just ran!  Very nice for reproducibility.",
      "parentUuid": "9707bbb4_afcc352d",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85293c0b_da1116a1",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-11T14:14:57Z",
      "side": 1,
      "message": "It doesn\u0027t prevent us from running it in a derivation, I just don\u0027t think it\u0027s very useful - anyways, that\u0027s a separate discussion, it\u0027s unrelated to the code introduced here.",
      "parentUuid": "f5c8363f_afc728dd",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6c36ea1_11987880",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-12T05:57:51Z",
      "side": 1,
      "message": "Running it inside a derivation is incredibly useful: it\u0027s *reproducible*.\n\nIf it\u0027s so easy to do this in a derivation, please include an example of that.",
      "parentUuid": "85293c0b_da1116a1",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed2ee5fa_ba1e392f",
        "filename": "tvix/glue/benches/eval.rs",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-12T08:36:45Z",
      "side": 1,
      "message": "It\u0027s not reproducible - the timing information (the output you care about) is highly machine specific. So you kinda want to have control over *where* the final benchmark is run.\n\nThis CL is an incremental addition for manual `cargo bench` runs, in addition to the benchmarks we already have.\n\nIf you\u0027re after not having to build the benchmark itself all the time, that\u0027s blocked on https://github.com/nix-community/crate2nix/issues/284. Once we have that, this could be a small shell script invoking the result of a derivation. \n\nBuilding this in a derivation that emits the build results in its outputs wouldn\u0027t make sense - you would cache runs from other, more or less powerful machines and the results would not be comparable.",
      "parentUuid": "b6c36ea1_11987880",
      "revId": "f89d0fe4c17a2114ec903fae54d0e93cf29e24d5",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}