{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6c8409e8_e3733a3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-08T10:09:26Z",
      "side": 1,
      "message": "I\u0027m not convinced yet this approach is leading somewhere. It\u0027s introducing a lot of complexity, while the outcome still is unclear.\n\nI understand you want to break this into small CLs, and I agree with this deserving individual commits, but I\u0027d need to see the outcome to grok if this entire endeavor makes sense.\n\nThis individual CL on its own is no improvement, and raises more questions than it answers, so I\u0027d prefer this to be not merged until we can see the rest of it.",
      "revId": "0a0d35d256f9e5607d9b311a3bbbb238379696bf",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f34fba5c_82e80f11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T03:41:55Z",
      "side": 1,
      "message": "\u003e the outcome still is unclear\n\ncl/10213 removes the `::exclude[default.nix]` josh filter.  The outcome is now clear: our josh views aren\u0027t crippled anymore.\n\n\u003e I\u0027m not convinced yet this approach is leading somewhere.\n\nThen propose an alternative CL which accomplishes the same objective.",
      "parentUuid": "6c8409e8_e3733a3f",
      "revId": "0a0d35d256f9e5607d9b311a3bbbb238379696bf",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f2ba785_586e2b8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000034
      },
      "writtenOn": "2023-12-09T11:59:58Z",
      "side": 1,
      "message": "Why do you want the josh views to be on par with the proper depot experience? I think realizing that goal is kind of a big ask, since it requires maintenance from people who do not rely on it, since most if not all active contributors have a full checkout.\n\nI would say it could be a nice goal at some point, e.g. when casual contributions to tvix become more frequent (I think the primary hurdle there is not the lack of a `default.nix`, anyways). This, however, has some fundamental challenges of course, since we do have a monorepo and want to benefit from itâ€¦",
      "parentUuid": "f34fba5c_82e80f11",
      "revId": "0a0d35d256f9e5607d9b311a3bbbb238379696bf",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6e2d722_07929be9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T22:47:29Z",
      "side": 1,
      "message": "The write path from the tvix josh view is unusable, right now people can\u0027t contribute back from just the josh view checkout at all due to non-bijective filters - see https://b.tvl.fyi/issues/320 and the linked issue.\n\nI still think for every contributor, the full depot checkout should be the right medium, CI works there and it\u0027s exercised during every CL.\n\nLooping the CI-to-be-seen-when-checking-out-the-josh-view into regular CI seems to be quite an effort too.",
      "parentUuid": "4f2ba785_586e2b8d",
      "revId": "0a0d35d256f9e5607d9b311a3bbbb238379696bf",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "791f0bf8_e81dc5c5",
        "filename": "tvix/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 4,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-07T22:07:23Z",
      "side": 1,
      "message": "Where is this supposed to come from?",
      "revId": "0a0d35d256f9e5607d9b311a3bbbb238379696bf",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c704ce5_8cc0ae5b",
        "filename": "tvix/default.nix",
        "patchSetId": 4
      },
      "lineNbr": 4,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-08T08:58:18Z",
      "side": 1,
      "message": "See `tvix/readtree.nix`, which passes `depot.tvix.proto` as this parameter.\n\nFor the building-outside-of-depot scenario I will probably add a default value for this argument, and use `\u003cnixpkgs/lib\u003e`\u0027s closest approximation of depot\u0027s `sparseFileSet`.  But that is for a future CL; I\u0027m trying to do this one piece at a time instead of a massive CL.",
      "parentUuid": "791f0bf8_e81dc5c5",
      "revId": "0a0d35d256f9e5607d9b311a3bbbb238379696bf",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}