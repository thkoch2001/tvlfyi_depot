{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a659d0f8_13b18379",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-10-09T23:05:34Z",
      "side": 1,
      "message": "Note that I\u0027m not sure this actually makes the renderer *better*, and that is the only user of this code. It adds more cruft to the NAR writer, and we might want a sync version *as well*, which would duplicate a bunch of code, or add even more complexity trying to unify them. I\u0027m not sure what the performance impact of this change is either; I\u0027m genuinely unsure about a lot of things here.\n\nConsider this a draft CL, not a shall-merge.",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dc48e2e_daa6a729",
        "filename": "tvix/nix-compat/Cargo.toml",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-10-09T22:20:03Z",
      "side": 1,
      "message": "Hmmh, unconditionally pulling in tokio into `nix-compat` is a problem.\n\nThere\u0027s some ideas to explore:\n\n - Put the nar writer behind a feature flag and only pull in tokio if it\u0027s set. That\u0027d have the disadvantage of not being able to emit NARs (or validate NAR hashes) in `no_std` contexts.\n - Have two implementations, the existing blocking and an async one, and only pull in the async one on a feature flag, but I\u0027m not sure about how annoying it would be.",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d291f94e_c57c8a75",
        "filename": "tvix/nix-compat/Cargo.toml",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-10-09T23:05:34Z",
      "side": 1,
      "message": "This only pulls the traits, I think? io::Write isn\u0027t available under no_std *either*",
      "parentUuid": "4dc48e2e_daa6a729",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58f36c5b_9911d29d",
        "filename": "tvix/nix-compat/Cargo.toml",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-10-10T14:43:32Z",
      "side": 1,
      "message": "This has been moved behind a feature flag.",
      "parentUuid": "d291f94e_c57c8a75",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96fc5a96_745b5396",
        "filename": "tvix/nix-compat/src/nar/writer/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-10-09T22:20:03Z",
      "side": 1,
      "message": "There\u0027s also `futures_io` and https://github.com/tokio-rs/tokio/pull/2117, which could be a less heavy dependency, but it\u0027s also std-only, and not having Async[Buf]ReadExt probably makes this more annoying to write.",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3107db39_04e79b58",
        "filename": "tvix/nix-compat/src/nar/writer/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-10-09T23:05:34Z",
      "side": 1,
      "message": "See the first patchset for that version.",
      "parentUuid": "96fc5a96_745b5396",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "994994bb_671e5008",
        "filename": "tvix/nix-compat/src/nar/writer/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2023-10-10T10:09:05Z",
      "side": 1,
      "message": "The specific reason that I rewrote against tokio is that the futures crate and tokio each have their own, incompatible I/O traits. The extension traits exist for futures_io alike, but they live in futures_util.",
      "parentUuid": "3107db39_04e79b58",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b3458d9_e3f4f925",
        "filename": "tvix/nix-compat/src/nar/writer/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-10-10T14:43:32Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "994994bb_671e5008",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}