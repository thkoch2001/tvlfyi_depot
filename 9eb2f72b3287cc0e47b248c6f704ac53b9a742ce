{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4dc48e2e_daa6a729",
        "filename": "tvix/nix-compat/Cargo.toml",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-10-09T22:20:03Z",
      "side": 1,
      "message": "Hmmh, unconditionally pulling in tokio into `nix-compat` is a problem.\n\nThere\u0027s some ideas to explore:\n\n - Put the nar writer behind a feature flag and only pull in tokio if it\u0027s set. That\u0027d have the disadvantage of not being able to emit NARs (or validate NAR hashes) in `no_std` contexts.\n - Have two implementations, the existing blocking and an async one, and only pull in the async one on a feature flag, but I\u0027m not sure about how annoying it would be.",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96fc5a96_745b5396",
        "filename": "tvix/nix-compat/src/nar/writer/mod.rs",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-10-09T22:20:03Z",
      "side": 1,
      "message": "There\u0027s also `futures_io` and https://github.com/tokio-rs/tokio/pull/2117, which could be a less heavy dependency, but it\u0027s also std-only, and not having Async[Buf]ReadExt probably makes this more annoying to write.",
      "revId": "9eb2f72b3287cc0e47b248c6f704ac53b9a742ce",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}