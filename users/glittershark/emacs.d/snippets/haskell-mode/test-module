# -*- mode: snippet -*-
# name: test-module
# key: test
# expand-env: ((yas-indent-line 'fixed))
# --
{-# LANGUAGE ApplicativeDo #-}
--------------------------------------------------------------------------------
module ${1:`(if (not buffer-file-name) "Module"
                (let ((name (file-name-sans-extension (buffer-file-name)))
                      (case-fold-search nil))
                     (if (cl-search "test/" name)
                         (replace-regexp-in-string "/" "."
                           (replace-regexp-in-string "^\/[^A-Z]*" ""
                             (car (last (split-string name "src")))))
                         (file-name-nondirectory name))))`} where
--------------------------------------------------------------------------------
import           Test.Prelude
import qualified Hedgehog.Gen as Gen
import qualified Hedgehog.Range as Range
--------------------------------------------------------------------------------
import           ${1:$(s-chop-suffix "Test" yas-text)}
--------------------------------------------------------------------------------
