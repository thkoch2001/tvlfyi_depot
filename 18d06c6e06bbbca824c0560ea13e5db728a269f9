{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b0ed6624_122ffe0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:37:02Z",
      "side": 1,
      "message": "This seems really repetitive; can\u0027t we just have two things\n\n1. A derivation\n2. A list of impure environment variables?",
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "118020b7_f6643dcb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:42:38Z",
      "side": 1,
      "message": "If this depends on tvix-castore it needs to be called tvix-cabuild.",
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d624e2d3_8603d2b1",
        "filename": "tvix/build/protos/LICENSE",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:37:02Z",
      "side": 1,
      "message": "Please change this to GPLv3",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 28
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12b94e09_78137114",
        "filename": "tvix/build/protos/LICENSE",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T17:47:38Z",
      "side": 1,
      "message": "Nak. All .proto files are MIT, also see \"License structure\" in /tvix/README.md:\n\n\u003e [â€¦] with the exception of the protocol buffer definitions used for communication between services which are available under a more permissive license (MIT).\n\nThe RPC interfaces themselves (code generated from it, like the golang bindings) are permissively licensed, so you can write your own proprietary implementation if you want.",
      "parentUuid": "d624e2d3_8603d2b1",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 28
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "118686e0_337c00df",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:37:02Z",
      "side": 1,
      "message": "Please change this to \"how e.g. *impure* environment variables in the build are set\".  I found this sentence very confusing until I read the next paragraph.",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 55
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1561d892_c7d8dd77",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T18:56:42Z",
      "side": 1,
      "message": "I actually forgot to add the non-impure environment variables (from https://github.com/adisbladis/go-nix/commit/603df5db86ab97ba29f6f94d74f4e51642c56834#diff-60d42249bb53df5d3ffd44f507aee87a57c2cff5a20f6b1d8403a76d0ce609b0R45-R61) to cl/10236.\n\nIt\u0027s now in https://cl.tvl.fyi/c/depot/+/10236/8 - does it make more sense now? With that in mind, how would you write this section?\n\nWhat I meant to say is that the builder doesn\u0027t need to know the meaning of any of these environment variables, it\u0027s just flattened out in the BuildRequest, and done by derivation_to_build_request when translating from a Derivation to a BuildRequest.",
      "parentUuid": "118686e0_337c00df",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 55
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9dc6703c_e435d91a",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T18:56:42Z",
      "side": 1,
      "message": "Comment removed by: tazjin; Reason: Accidental double submit of comment",
      "parentUuid": "118686e0_337c00df",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 55
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01e37628_b12e45bb",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T18:57:35Z",
      "side": 1,
      "message": "(ignore the last (smaller) comment, gerrit burped on two drafts in the same thread)",
      "parentUuid": "9dc6703c_e435d91a",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 55
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "581ae2a1_cc1a5288",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:37:02Z",
      "side": 1,
      "message": "I\u0027m having a hard time understanding this.  Yes, the daemon protocol has opcodes for uploading input addressed store paths, but you don\u0027t have to use them if you\u0027re willing to upload the entire derivation tree.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 75
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f566ffa_1ddfbf7c",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T17:47:38Z",
      "side": 1,
      "message": "The point I\u0027m trying to make here is that a BuildRequest in itself is hermetic - all inputs are content-addressed by their castore nodes, and an individual build request doesn\u0027t need to maintain a global \"trusted\" context of input-addressed paths to their contents.",
      "parentUuid": "581ae2a1_cc1a5288",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 75
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f61a59f9_04852913",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:37:02Z",
      "side": 1,
      "message": "So tvix-build cannot be used with just an ordinary store?\n\nYou mean it has a hard requirement on tvix-castore?  Hrm.  Not sure about that.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 66
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda26db2_fffae819",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T17:47:38Z",
      "side": 1,
      "message": "The tvix RPC protocol identifies build inputs by their tvix-castore nodes. This is an advantage over plain paths due to the reasons described in comments and elsewhere in this file.",
      "parentUuid": "f61a59f9_04852913",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 66
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "506cdc22_d07ddd72",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000066
      },
      "writtenOn": "2023-12-09T17:37:02Z",
      "side": 1,
      "message": "This seems really repetitive; can\u0027t we just have two things\n\n1. A derivation\n2. A list of impure environment variables?",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5243dd1a_9e1352ef",
        "filename": "tvix/build/protos/build.proto",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2023-12-09T17:47:38Z",
      "side": 1,
      "message": "There\u0027s no RPC definiton yet, this essentially is the derivation and other impure env vars/requirements.",
      "parentUuid": "506cdc22_d07ddd72",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "18d06c6e06bbbca824c0560ea13e5db728a269f9",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}