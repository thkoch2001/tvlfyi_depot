{
  "comments": [
    {
      "key": {
        "uuid": "f629cae7_18e8fe26",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-07-26T21:23:13Z",
      "side": 1,
      "message": "I don\u0027t think this should be *in* the Panettone module tbh, it should rather take connection settings with the database configured per host.\n\nOne of the ideas of using Postgres was that we could point multiple local services at it (e.g. tvldb if we migrate that to whitby).",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34649a7d_ecb2990f",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:55:04Z",
      "side": 1,
      "message": "that\u0027s one of the nice things about nixos modules though - multiple modules like this can say that they depend on postgres (services.postgres.enable \u003d true) and require the existense of a user and a db (ensureDatabase and ensureUsers) and it\u0027ll all get merged together and in the overall system configuration you only have one postgres service running (whose settings you can further override with `mkOverride` or `mkForce`). I\u0027d feel weird about removing this here, since then there\u0027s a panettone module that you can enable but doesn\u0027t actually *work* unless you enable a postgres server elsewhere.",
      "parentUuid": "f629cae7_18e8fe26",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59fbd742_b9f2655e",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-07-27T01:02:03Z",
      "side": 1,
      "message": "I disagree with this and think that the general widespread use of \"magic service enabling at a distance\" is an antipattern. For example, this module also configures authentication settings for Postgres which might be completely inappropriate for other services.\n\nThe way I think stuff like this should work (if you want to prevent the \"enabling it doesn\u0027t work\" situation) is to have an assert for checking that either the Postgres module is enabled (if there\u0027s a default connection string value), or that the user has specified an alternative connection string.",
      "parentUuid": "34649a7d_ecb2990f",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bbba217_1875e936",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-27T01:21:41Z",
      "side": 1,
      "message": "I don\u0027t see this as \"magic\" or \"at a distance\" at all. Running a postgres database is a hard requirement of running panettone, the same way that installing dependencies of a package is a hard requirement to use that package. If I asked a system to install emacs and then when I tried to run emacs it failed because I had to *also* install glibc, I would be very confused. \n\nWould you feel differently about this if we removed the authentication bits?",
      "parentUuid": "59fbd742_b9f2655e",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf389223_2b6a454b",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-27T01:34:24Z",
      "side": 1,
      "message": "hmm thinking more and one possible source of our disagreement might be that I am thinking of the modules in this directory as specific to our monorepo, whereas you may be evaluating them from the same perspective that you evaluate nixos modules in nixpkgs/ - if I enabled a service in nixpkgs and I also got a postgres database on my machine, I would be unhappy - but in this case I\u0027m really just thinking about this module as \"here\u0027s everything panettone-related for our specific use cases\".",
      "parentUuid": "9bbba217_1875e936",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b13ce48a_7f32b1fe",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-07-27T02:11:25Z",
      "side": 1,
      "message": "This assumption only holds until the next Postgres-using service is introduced.\n\nOne of my goals for the depot is to slowly move towards a saner module system, once we have an idea of what that looks like. I have some thoughts about what it *doesn\u0027t* look like, and that\u0027s encapsulated dependencies - IMO services you depend on should be \"dependency-injected\" the same way it is done for code.\n\nTL;DR: I\u0027d like the Postgres setup to be whitby config, with Panettone receiving the configuration details it needs via an option (and asserting that this is in fact the case).",
      "parentUuid": "cf389223_2b6a454b",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3b63dc5_1512cd41",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-27T14:17:05Z",
      "side": 1,
      "message": "Done. I still think this is a regression in terms of clarity and usability, but whatever.",
      "parentUuid": "b13ce48a_7f32b1fe",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f2d80e5_caecef85",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-26T21:30:29Z",
      "side": 1,
      "message": "This makes me sad, but I guess we trust everyone on localhost and this doesn\u0027t have any credentials so whatever.",
      "range": {
        "startLine": 35,
        "startChar": 22,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acbda380_7d393dc0",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:55:04Z",
      "side": 1,
      "message": "oh I forgot to mention this in the commit message, but I\u0027d like to update this to use password authentication after it\u0027s deployed",
      "parentUuid": "9f2d80e5_caecef85",
      "range": {
        "startLine": 35,
        "startChar": 22,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03ede2e3_294c7401",
        "filename": "ops/nixos/panettone.nix",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-27T21:04:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "acbda380_7d393dc0",
      "range": {
        "startLine": 35,
        "startChar": 22,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "b69a2baa8fc0fd3a3fd620ce5e9e5e4539bb2259",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": false
    }
  ]
}