{
  "comments": [
    {
      "key": {
        "uuid": "ccd58d0f_ef2b8470",
        "filename": "web/panettone/src/packages.lisp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-07-26T21:34:23Z",
      "side": 1,
      "message": "was it just me, or were you using #: in some places elsewhere\n(#: is supposed to be \"better\" because it doesn\u0027t intern a symbol, but I think it looks ugly :p)",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "212e09f5_ee624290",
        "filename": "web/panettone/src/packages.lisp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:38:50Z",
      "side": 1,
      "message": "yeah I wasn\u0027t quite sure what the difference is.",
      "parentUuid": "ccd58d0f_ef2b8470",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f05994b_96582a5a",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-07-26T21:34:23Z",
      "side": 1,
      "message": "nit: \"insteaad\"",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61226c2f_90bff3aa",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-07-26T21:34:23Z",
      "side": 1,
      "message": "If you only want one value, use NTH-VALUE: http://www.lispworks.com/documentation/HyperSpec/Body/m_nth_va.htm",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51c92ae6_a45df570",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:38:50Z",
      "side": 1,
      "message": "cool!",
      "parentUuid": "61226c2f_90bff3aa",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "034154f6_261c165d",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-07-26T21:34:23Z",
      "side": 1,
      "message": "protip: you can s/postmodern:/pomo:/ to avoid typing (because it has a package nickname)",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8836463_1e448ea7",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:38:50Z",
      "side": 1,
      "message": "cool",
      "parentUuid": "034154f6_261c165d",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "984a74b1_c6b66db3",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 568,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-07-26T21:34:23Z",
      "side": 1,
      "message": "(why?)",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "810b4209_3bcd1e04",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 568,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:38:50Z",
      "side": 1,
      "message": "oh I should comment this - I noticed that if there\u0027s an error when checking auth with the ldap server the backtrace includes the password (!!). I checked and this hasn\u0027t happened on whitby yet, but yikes.",
      "parentUuid": "984a74b1_c6b66db3",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef53d5b2_5a86b417",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 568,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T21:58:48Z",
      "side": 1,
      "message": "submitted and applied on its own as CL/1471",
      "parentUuid": "810b4209_3bcd1e04",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4481f670_fe97c2f7",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 568,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-07-26T21:59:45Z",
      "side": 1,
      "message": "What you could do is wrap the password in a CLOS class (because they aren\u0027t printed with their slots shown)?",
      "parentUuid": "810b4209_3bcd1e04",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4740cba_fc2299ba",
        "filename": "web/panettone/src/panettone.lisp",
        "patchSetId": 1
      },
      "lineNbr": 568,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2020-07-26T22:14:28Z",
      "side": 1,
      "message": "explained in IRC:\n\n\u003c+grfn\u003e eta: I\u0027m not sure that\u0027d work\n\u003c+grfn\u003e because before it gets wrapped in a class it\u0027s still a local variable\n\u003c+grfn\u003e like you can just go higher up the stacktrace\n\u003c+grfn\u003e to when it\u0027s a string\n\u003ceta\u003e grfn: well where do you call the function though \n\u003c+grfn\u003e eta: `make-instance`? I\u0027d assume in the hunchentoot handler\n\u003c+grfn\u003e it\u0027s still a local variable at some point in the stack, is the problem\n\u003c+grfn\u003e because it\u0027s passed to us as a parameter\n\u003c+grfn\u003e from the route handler\n\u003c+grfn\u003e and in general I\u0027d like to forbid accidentally logging secret stuff\n        holistically\n\u003c+grfn\u003e rather than having to opt-in to scrubbing\n\u003c+grfn\u003e eg I would *not* like to have to be like \"everyone in tvl has to\n        rotate their ldap password now\"\n\u003c+grfn\u003e that would be... embarrassing",
      "parentUuid": "4481f670_fe97c2f7",
      "revId": "e05bcf38631765351679751cc5c1552ddab0306d",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36",
      "unresolved": false
    }
  ]
}