// Code generated by protoc-gen-go. DO NOT EDIT.
// source: depot_scanner.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PathType int32

const (
	PathType_UNKNOWN PathType = 0
	PathType_DEPOT   PathType = 1
	PathType_STORE   PathType = 2
	PathType_CORE    PathType = 3
)

var PathType_name = map[int32]string{
	0: "UNKNOWN",
	1: "DEPOT",
	2: "STORE",
	3: "CORE",
}

var PathType_value = map[string]int32{
	"UNKNOWN": 0,
	"DEPOT":   1,
	"STORE":   2,
	"CORE":    3,
}

func (x PathType) String() string {
	return proto.EnumName(PathType_name, int32(x))
}

func (PathType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbf54fdad4d07d4f, []int{0}
}

type ScanRequest struct {
	// Which revision of the depot
	Revision string `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	Attr     string `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	// Optionally, the attr to evaluate can be provided as a path to a folder or a
	// .nix file.  This is used by the HTTP service.
	AttrAsPath           string   `protobuf:"bytes,3,opt,name=attrAsPath,proto3" json:"attrAsPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbf54fdad4d07d4f, []int{0}
}

func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (m *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(m, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *ScanRequest) GetAttr() string {
	if m != nil {
		return m.Attr
	}
	return ""
}

func (m *ScanRequest) GetAttrAsPath() string {
	if m != nil {
		return m.AttrAsPath
	}
	return ""
}

type ScanResponse struct {
	DepotPath            []string `protobuf:"bytes,1,rep,name=depotPath,proto3" json:"depotPath,omitempty"`
	NixStorePath         []string `protobuf:"bytes,2,rep,name=nixStorePath,proto3" json:"nixStorePath,omitempty"`
	CorePkgsPath         []string `protobuf:"bytes,4,rep,name=corePkgsPath,proto3" json:"corePkgsPath,omitempty"`
	OtherPath            []string `protobuf:"bytes,3,rep,name=otherPath,proto3" json:"otherPath,omitempty"`
	Derivation           []byte   `protobuf:"bytes,5,opt,name=derivation,proto3" json:"derivation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbf54fdad4d07d4f, []int{1}
}

func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (m *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(m, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

func (m *ScanResponse) GetDepotPath() []string {
	if m != nil {
		return m.DepotPath
	}
	return nil
}

func (m *ScanResponse) GetNixStorePath() []string {
	if m != nil {
		return m.NixStorePath
	}
	return nil
}

func (m *ScanResponse) GetCorePkgsPath() []string {
	if m != nil {
		return m.CorePkgsPath
	}
	return nil
}

func (m *ScanResponse) GetOtherPath() []string {
	if m != nil {
		return m.OtherPath
	}
	return nil
}

func (m *ScanResponse) GetDerivation() []byte {
	if m != nil {
		return m.Derivation
	}
	return nil
}

type ArchiveRequest struct {
	DepotPath            []string `protobuf:"bytes,1,rep,name=depotPath,proto3" json:"depotPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveRequest) Reset()         { *m = ArchiveRequest{} }
func (m *ArchiveRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveRequest) ProtoMessage()    {}
func (*ArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbf54fdad4d07d4f, []int{2}
}

func (m *ArchiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveRequest.Unmarshal(m, b)
}
func (m *ArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveRequest.Merge(m, src)
}
func (m *ArchiveRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveRequest.Size(m)
}
func (m *ArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveRequest proto.InternalMessageInfo

func (m *ArchiveRequest) GetDepotPath() []string {
	if m != nil {
		return m.DepotPath
	}
	return nil
}

type ArchiveChunk struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveChunk) Reset()         { *m = ArchiveChunk{} }
func (m *ArchiveChunk) String() string { return proto.CompactTextString(m) }
func (*ArchiveChunk) ProtoMessage()    {}
func (*ArchiveChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbf54fdad4d07d4f, []int{3}
}

func (m *ArchiveChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveChunk.Unmarshal(m, b)
}
func (m *ArchiveChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveChunk.Marshal(b, m, deterministic)
}
func (m *ArchiveChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveChunk.Merge(m, src)
}
func (m *ArchiveChunk) XXX_Size() int {
	return xxx_messageInfo_ArchiveChunk.Size(m)
}
func (m *ArchiveChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveChunk.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveChunk proto.InternalMessageInfo

func (m *ArchiveChunk) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func init() {
	proto.RegisterEnum("tvl.tools.depot_scanner.PathType", PathType_name, PathType_value)
	proto.RegisterType((*ScanRequest)(nil), "tvl.tools.depot_scanner.ScanRequest")
	proto.RegisterType((*ScanResponse)(nil), "tvl.tools.depot_scanner.ScanResponse")
	proto.RegisterType((*ArchiveRequest)(nil), "tvl.tools.depot_scanner.ArchiveRequest")
	proto.RegisterType((*ArchiveChunk)(nil), "tvl.tools.depot_scanner.ArchiveChunk")
}

func init() { proto.RegisterFile("depot_scanner.proto", fileDescriptor_dbf54fdad4d07d4f) }

var fileDescriptor_dbf54fdad4d07d4f = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x51, 0x4f, 0xe2, 0x40,
	0x10, 0xbe, 0x85, 0x72, 0x47, 0x87, 0xe6, 0xd2, 0xec, 0x5d, 0x72, 0x84, 0x5c, 0x0c, 0x69, 0x50,
	0x1b, 0x13, 0x8b, 0xd1, 0x07, 0x9f, 0x11, 0x78, 0x32, 0x02, 0x69, 0x31, 0x26, 0x26, 0x86, 0xd4,
	0x32, 0xda, 0x06, 0xd2, 0xad, 0xdb, 0xa5, 0x91, 0xbf, 0xe5, 0xaf, 0xf0, 0x67, 0x99, 0xdd, 0x56,
	0x2c, 0x0f, 0xe0, 0xd3, 0x7e, 0xf3, 0xed, 0x37, 0x3b, 0x33, 0xdf, 0x2c, 0xfc, 0x99, 0x63, 0xc2,
	0xc4, 0x2c, 0x0d, 0xfc, 0x38, 0x46, 0xee, 0x24, 0x9c, 0x09, 0x46, 0xff, 0x89, 0x6c, 0xe9, 0x08,
	0xc6, 0x96, 0xa9, 0xb3, 0x75, 0x6d, 0x3d, 0x40, 0xc3, 0x0b, 0xfc, 0xd8, 0xc5, 0x97, 0x15, 0xa6,
	0x82, 0xb6, 0xa0, 0xce, 0x31, 0x8b, 0xd2, 0x88, 0xc5, 0x4d, 0xd2, 0x26, 0xb6, 0xee, 0x6e, 0x62,
	0x4a, 0x41, 0xf3, 0x85, 0xe0, 0xcd, 0x8a, 0xe2, 0x15, 0xa6, 0x07, 0x00, 0xf2, 0xec, 0xa5, 0x13,
	0x5f, 0x84, 0xcd, 0xaa, 0xba, 0x29, 0x31, 0xd6, 0x1b, 0x01, 0x23, 0x7f, 0x3f, 0x4d, 0x58, 0x9c,
	0x22, 0xfd, 0x0f, 0xba, 0x6a, 0x40, 0xe9, 0x49, 0xbb, 0x6a, 0xeb, 0xee, 0x17, 0x41, 0x2d, 0x30,
	0xe2, 0xe8, 0xd5, 0x13, 0x8c, 0xa3, 0x12, 0x54, 0x94, 0x60, 0x8b, 0x93, 0x9a, 0x40, 0xe2, 0xc5,
	0x73, 0x5e, 0x54, 0xcb, 0x35, 0x65, 0x4e, 0x56, 0x61, 0x22, 0x44, 0x5e, 0x74, 0xa5, 0xaa, 0x6c,
	0x08, 0xd9, 0xf4, 0x1c, 0x79, 0x94, 0xf9, 0x42, 0x8e, 0x59, 0x6b, 0x13, 0xdb, 0x70, 0x4b, 0x8c,
	0xe5, 0xc0, 0xef, 0x1e, 0x0f, 0xc2, 0x28, 0xc3, 0x4f, 0x5b, 0xf6, 0x76, 0x6d, 0x75, 0xc0, 0x28,
	0xf4, 0xfd, 0x70, 0x15, 0x2f, 0xe8, 0x5f, 0xa8, 0x05, 0x12, 0x28, 0x07, 0x0d, 0x37, 0x0f, 0x4e,
	0x2e, 0xa1, 0x2e, 0xd5, 0xd3, 0x75, 0x82, 0xb4, 0x01, 0xbf, 0x6e, 0x47, 0xd7, 0xa3, 0xf1, 0xdd,
	0xc8, 0xfc, 0x41, 0x75, 0xa8, 0x0d, 0x86, 0x93, 0xf1, 0xd4, 0x24, 0x12, 0x7a, 0xd3, 0xb1, 0x3b,
	0x34, 0x2b, 0xb4, 0x0e, 0x5a, 0x5f, 0xa2, 0xea, 0xf9, 0x3b, 0x01, 0x73, 0x20, 0x8b, 0x49, 0x23,
	0x3d, 0xe4, 0x59, 0x14, 0x20, 0xf5, 0x40, 0x93, 0x21, 0xed, 0x38, 0x3b, 0x36, 0xeb, 0x94, 0xd6,
	0xda, 0x3a, 0xfc, 0x46, 0x55, 0x2c, 0x67, 0x06, 0x8d, 0x1b, 0x7f, 0x81, 0xc5, 0x30, 0xf4, 0x78,
	0x67, 0xd6, 0xb6, 0x3d, 0x7b, 0x9e, 0x2f, 0xfb, 0x72, 0x46, 0xae, 0xec, 0xfb, 0xa3, 0x80, 0xcd,
	0x51, 0xc9, 0x9f, 0xd6, 0x51, 0x57, 0xa5, 0x74, 0x55, 0xca, 0x69, 0x91, 0xd2, 0x55, 0x1f, 0xf6,
	0xf1, 0xa7, 0x3a, 0x2e, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x34, 0x80, 0x62, 0x20, 0xce, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DepotScanServiceClient is the client API for DepotScanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DepotScanServiceClient interface {
	Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error)
	MakeArchive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (DepotScanService_MakeArchiveClient, error)
}

type depotScanServiceClient struct {
	cc *grpc.ClientConn
}

func NewDepotScanServiceClient(cc *grpc.ClientConn) DepotScanServiceClient {
	return &depotScanServiceClient{cc}
}

func (c *depotScanServiceClient) Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error) {
	out := new(ScanResponse)
	err := c.cc.Invoke(ctx, "/tvl.tools.depot_scanner.DepotScanService/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depotScanServiceClient) MakeArchive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (DepotScanService_MakeArchiveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DepotScanService_serviceDesc.Streams[0], "/tvl.tools.depot_scanner.DepotScanService/MakeArchive", opts...)
	if err != nil {
		return nil, err
	}
	x := &depotScanServiceMakeArchiveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DepotScanService_MakeArchiveClient interface {
	Recv() (*ArchiveChunk, error)
	grpc.ClientStream
}

type depotScanServiceMakeArchiveClient struct {
	grpc.ClientStream
}

func (x *depotScanServiceMakeArchiveClient) Recv() (*ArchiveChunk, error) {
	m := new(ArchiveChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DepotScanServiceServer is the server API for DepotScanService service.
type DepotScanServiceServer interface {
	Scan(context.Context, *ScanRequest) (*ScanResponse, error)
	MakeArchive(*ArchiveRequest, DepotScanService_MakeArchiveServer) error
}

// UnimplementedDepotScanServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDepotScanServiceServer struct {
}

func (*UnimplementedDepotScanServiceServer) Scan(ctx context.Context, req *ScanRequest) (*ScanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scan not implemented")
}
func (*UnimplementedDepotScanServiceServer) MakeArchive(req *ArchiveRequest, srv DepotScanService_MakeArchiveServer) error {
	return status.Errorf(codes.Unimplemented, "method MakeArchive not implemented")
}

func RegisterDepotScanServiceServer(s *grpc.Server, srv DepotScanServiceServer) {
	s.RegisterService(&_DepotScanService_serviceDesc, srv)
}

func _DepotScanService_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepotScanServiceServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tvl.tools.depot_scanner.DepotScanService/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepotScanServiceServer).Scan(ctx, req.(*ScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DepotScanService_MakeArchive_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DepotScanServiceServer).MakeArchive(m, &depotScanServiceMakeArchiveServer{stream})
}

type DepotScanService_MakeArchiveServer interface {
	Send(*ArchiveChunk) error
	grpc.ServerStream
}

type depotScanServiceMakeArchiveServer struct {
	grpc.ServerStream
}

func (x *depotScanServiceMakeArchiveServer) Send(m *ArchiveChunk) error {
	return x.ServerStream.SendMsg(m)
}

var _DepotScanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tvl.tools.depot_scanner.DepotScanService",
	HandlerType: (*DepotScanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Scan",
			Handler:    _DepotScanService_Scan_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MakeArchive",
			Handler:       _DepotScanService_MakeArchive_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "depot_scanner.proto",
}
