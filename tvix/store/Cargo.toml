[package]
name = "tvix-store"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = { workspace = true }
async-compression = { workspace = true, features = ["tokio", "bzip2", "gzip", "xz", "zstd"] }
async-stream = { workspace = true }
blake3 = { workspace = true, features = ["rayon", "std"] }
bstr = { workspace = true }
bytes = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
count-write = { workspace = true }
data-encoding = { workspace = true }
futures = { workspace = true }
lazy_static = { workspace = true }
nix-compat = { path = "../nix-compat", features = ["async"] }
<<<<<<< HEAD   (649ccd chore(clippy): fix clippy (lvl2: MachineApplicable, human-ai)
pin-project-lite = "0.2.13"
prost = "0.13.3"
serde = { version = "1.0.197", features = [ "derive" ] }
serde_json = "1.0"
serde_with = "3.7.0"
serde_qs = "0.12.0"
sha2 = "0.10.6"
sled = { version = "0.34.7" }
thiserror = "1.0.38"
tokio = { version = "1.32.0", features = ["fs", "macros", "net", "rt", "rt-multi-thread", "signal"] }
tokio-listener = { version = "0.4.2", features = [ "clap", "multi-listener", "sd_listen", "tonic012" ] }
tokio-stream = { version = "0.1.14", features = ["fs"] }
tokio-util = { version = "0.7.9", features = ["io", "io-util", "compat"] }
tonic = { version = "0.12.0", features = ["tls", "tls-roots"] }
tower = "0.4.13"
tower-http = { version = "0.5.0", features = ["trace"] }
=======
pin-project-lite = { workspace = true }
prost = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_with = { workspace = true }
serde_qs = { workspace = true }
sha2 = { workspace = true }
sled = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["fs", "macros", "net", "rt", "rt-multi-thread", "signal"] }
tokio-listener = { workspace = true, features = ["clap", "multi-listener", "sd_listen", "tonic012"] }
tokio-stream = { workspace = true, features = ["fs"] }
tokio-util = { workspace = true, features = ["io", "io-util", "compat"] }
tonic = { workspace = true, features = ["tls", "tls-roots"] }
tower = { workspace = true }
tower-http = { workspace = true, features = ["trace"] }
>>>>>>> BRANCH (e4378f feat(tvix/store): seekable nar renderer)
tvix-castore = { path = "../castore" }
url = { workspace = true }
walkdir = { workspace = true }
reqwest = { workspace = true, features = ["rustls-tls-native-roots", "stream"] }
reqwest-middleware = { workspace = true }
lru = { workspace = true }
parking_lot = { workspace = true }
tvix-tracing = { path = "../tracing", features = ["tonic", "reqwest"] }
tracing = { workspace = true }
tracing-indicatif = { workspace = true }
hyper-util = { workspace = true }
toml = { version = "0.8.19", optional = true }
tonic-health = { workspace = true }
redb = { workspace = true }
mimalloc = { workspace = true }
tonic-reflection = { workspace = true, optional = true }
bigtable_rs = { workspace = true, optional = true }

[build-dependencies]
<<<<<<< HEAD   (649ccd chore(clippy): fix clippy (lvl2: MachineApplicable, human-ai)
prost-build = "0.13.3"
tonic-build = "0.12.0"
=======
prost-build = { workspace = true }
tonic-build = { workspace = true }
>>>>>>> BRANCH (e4378f feat(tvix/store): seekable nar renderer)

[dev-dependencies]
async-process = { workspace = true }
rstest = { workspace = true }
rstest_reuse = { workspace = true }
tempfile = { workspace = true }
tokio-retry = { workspace = true }

[features]
default = ["cloud", "fuse", "otlp", "tonic-reflection"]
cloud = [
  "dep:bigtable_rs",
  "tvix-castore/cloud"
]
fuse = ["tvix-castore/fuse"]
otlp = ["tvix-tracing/otlp"]
tonic-reflection = ["dep:tonic-reflection", "tvix-castore/tonic-reflection"]
tracy = ["tvix-tracing/tracy"]
virtiofs = ["tvix-castore/virtiofs"]
xp-store-composition = ["toml"]
# Whether to run the integration tests.
# Requires the following packages in $PATH:
# cbtemulator, google-cloud-bigtable-tool
integration = []

[lints]
workspace = true
