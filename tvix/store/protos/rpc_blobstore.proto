// SPDX-License-Identifier: MIT
// Copyright Â© 2022 The Tvix Authors
syntax = "proto3";

package tvix.store.v1;

option go_package = "code.tvl.fyi/tvix/store/protos;storev1";

service BlobService {
    // In the future, Stat will expose more metadata about a given blob,
    // such as more granular chunking, baos.
    // For now, it's only used to check for the existence of a blob, as asking
    // this for a non-existing Blob will return a Status::not_found gRPC error.
    rpc Stat(StatBlobRequest) returns (BlobMeta);

    // Read returns a stream of BlobChunk, which is just a stream of bytes with
    // the digest specified in ReadBlobRequest.
    //
    // The server may decide on whatever chunking it may seem fit as a size for
    // the individual BlobChunk sent in the response stream.
    rpc Read(ReadBlobRequest) returns (stream BlobChunk);

    // Put uploads a Blob, by reading a stream of bytes.
    //
    // The way the data is chunked up in individual BlobChunk messages sent in
    // the stream has no effect on how the server ends up chunking blobs up.
    rpc Put(stream BlobChunk) returns (PutBlobResponse);
}

message StatBlobRequest {
    // The blake3 digest of the blob requested
    bytes digest = 1;
}

message BlobMeta {
}

message ReadBlobRequest {
    // The blake3 digest of the blob or chunk requested
    bytes digest = 1;
}

// This represents some bytes of a blob.
// Blobs are sent in smaller chunks to keep message sizes manageable.
message BlobChunk {
    bytes data = 1;
}

message PutBlobResponse {
    // The blake3 digest of the data that was sent.
    bytes digest = 1;
}
