// SPDX-License-Identifier: MIT
// Copyright Â© 2022 The Tvix Authors

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: tvix/castore/protos/rpc_chunkstore.proto

package castorev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChunkData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ChunkData) Reset() {
	*x = ChunkData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkData) ProtoMessage() {}

func (x *ChunkData) ProtoReflect() protoreflect.Message {
	mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkData.ProtoReflect.Descriptor instead.
func (*ChunkData) Descriptor() ([]byte, []int) {
	return file_tvix_castore_protos_rpc_chunkstore_proto_rawDescGZIP(), []int{0}
}

func (x *ChunkData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StatChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The blake3 digest of the chunk requested.
	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *StatChunkRequest) Reset() {
	*x = StatChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatChunkRequest) ProtoMessage() {}

func (x *StatChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatChunkRequest.ProtoReflect.Descriptor instead.
func (*StatChunkRequest) Descriptor() ([]byte, []int) {
	return file_tvix_castore_protos_rpc_chunkstore_proto_rawDescGZIP(), []int{1}
}

func (x *StatChunkRequest) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type StatChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatChunkResponse) Reset() {
	*x = StatChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatChunkResponse) ProtoMessage() {}

func (x *StatChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatChunkResponse.ProtoReflect.Descriptor instead.
func (*StatChunkResponse) Descriptor() ([]byte, []int) {
	return file_tvix_castore_protos_rpc_chunkstore_proto_rawDescGZIP(), []int{2}
}

type ReadChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The blake3 digest of the chunk requested.
	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *ReadChunkRequest) Reset() {
	*x = ReadChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChunkRequest) ProtoMessage() {}

func (x *ReadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChunkRequest.ProtoReflect.Descriptor instead.
func (*ReadChunkRequest) Descriptor() ([]byte, []int) {
	return file_tvix_castore_protos_rpc_chunkstore_proto_rawDescGZIP(), []int{3}
}

func (x *ReadChunkRequest) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type PutChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The blake3 digest of the data that was sent.
	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *PutChunkResponse) Reset() {
	*x = PutChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChunkResponse) ProtoMessage() {}

func (x *PutChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChunkResponse.ProtoReflect.Descriptor instead.
func (*PutChunkResponse) Descriptor() ([]byte, []int) {
	return file_tvix_castore_protos_rpc_chunkstore_proto_rawDescGZIP(), []int{4}
}

func (x *PutChunkResponse) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

var File_tvix_castore_protos_rpc_chunkstore_proto protoreflect.FileDescriptor

var file_tvix_castore_protos_rpc_chunkstore_proto_rawDesc = []byte{
	0x0a, 0x28, 0x74, 0x76, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74, 0x76, 0x69, 0x78,
	0x2e, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x1f, 0x0a, 0x09, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x10,
	0x53, 0x74, 0x61, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a,
	0x10, 0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x32, 0xee, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x21,
	0x2e, 0x74, 0x76, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x74, 0x76, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x21, 0x2e,
	0x74, 0x76, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x74, 0x76, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x12, 0x46,
	0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x1a, 0x2e, 0x74, 0x76, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x21, 0x2e, 0x74, 0x76, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x74,
	0x76, 0x6c, 0x2e, 0x66, 0x79, 0x69, 0x2f, 0x74, 0x76, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2d, 0x67, 0x6f, 0x3b, 0x63, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tvix_castore_protos_rpc_chunkstore_proto_rawDescOnce sync.Once
	file_tvix_castore_protos_rpc_chunkstore_proto_rawDescData = file_tvix_castore_protos_rpc_chunkstore_proto_rawDesc
)

func file_tvix_castore_protos_rpc_chunkstore_proto_rawDescGZIP() []byte {
	file_tvix_castore_protos_rpc_chunkstore_proto_rawDescOnce.Do(func() {
		file_tvix_castore_protos_rpc_chunkstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_tvix_castore_protos_rpc_chunkstore_proto_rawDescData)
	})
	return file_tvix_castore_protos_rpc_chunkstore_proto_rawDescData
}

var file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tvix_castore_protos_rpc_chunkstore_proto_goTypes = []any{
	(*ChunkData)(nil),         // 0: tvix.castore.v1.ChunkData
	(*StatChunkRequest)(nil),  // 1: tvix.castore.v1.StatChunkRequest
	(*StatChunkResponse)(nil), // 2: tvix.castore.v1.StatChunkResponse
	(*ReadChunkRequest)(nil),  // 3: tvix.castore.v1.ReadChunkRequest
	(*PutChunkResponse)(nil),  // 4: tvix.castore.v1.PutChunkResponse
}
var file_tvix_castore_protos_rpc_chunkstore_proto_depIdxs = []int32{
	1, // 0: tvix.castore.v1.ChunkService.Stat:input_type -> tvix.castore.v1.StatChunkRequest
	3, // 1: tvix.castore.v1.ChunkService.Read:input_type -> tvix.castore.v1.ReadChunkRequest
	0, // 2: tvix.castore.v1.ChunkService.Put:input_type -> tvix.castore.v1.ChunkData
	2, // 3: tvix.castore.v1.ChunkService.Stat:output_type -> tvix.castore.v1.StatChunkResponse
	0, // 4: tvix.castore.v1.ChunkService.Read:output_type -> tvix.castore.v1.ChunkData
	4, // 5: tvix.castore.v1.ChunkService.Put:output_type -> tvix.castore.v1.PutChunkResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tvix_castore_protos_rpc_chunkstore_proto_init() }
func file_tvix_castore_protos_rpc_chunkstore_proto_init() {
	if File_tvix_castore_protos_rpc_chunkstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChunkData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*StatChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StatChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReadChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PutChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tvix_castore_protos_rpc_chunkstore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tvix_castore_protos_rpc_chunkstore_proto_goTypes,
		DependencyIndexes: file_tvix_castore_protos_rpc_chunkstore_proto_depIdxs,
		MessageInfos:      file_tvix_castore_protos_rpc_chunkstore_proto_msgTypes,
	}.Build()
	File_tvix_castore_protos_rpc_chunkstore_proto = out.File
	file_tvix_castore_protos_rpc_chunkstore_proto_rawDesc = nil
	file_tvix_castore_protos_rpc_chunkstore_proto_goTypes = nil
	file_tvix_castore_protos_rpc_chunkstore_proto_depIdxs = nil
}
