[package]
name = "nar-bridge"
version = "0.1.0"
edition = "2021"

[dependencies]
<<<<<<< HEAD   (649ccd chore(clippy): fix clippy (lvl2: MachineApplicable, human-ai)
axum = { version = "0.7.5", features = ["http2"] }
tower = "0.4.13"
tower-http = { version = "0.5", features = ["trace"] }
bytes = "1.4.0"
clap = { version = "4.0", features = ["derive", "env"] }
data-encoding = "2.3.3"
futures = "0.3.30"
itertools = "0.12.0"
prost = "0.13.3"
=======
axum = { workspace = true, features = ["http2"] }
tower = { workspace = true }
tower-http = { workspace = true, features = ["trace"] }
bytes = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
data-encoding = { workspace = true }
futures = { workspace = true }
itertools = { workspace = true }
prost = { workspace = true }
>>>>>>> BRANCH (e4378f feat(tvix/store): seekable nar renderer)
nix-compat = { path = "../nix-compat", features = ["async"] }
thiserror = { workspace = true }
tokio = { workspace = true }
tokio-listener = { workspace = true, features = ["axum07", "clap", "multi-listener", "sd_listen"] }
tokio-util = { workspace = true, features = ["io", "io-util", "compat"] }
tonic = { workspace = true, features = ["tls", "tls-roots"] }
tvix-castore = { path = "../castore" }
tvix-store = { path = "../store" }
tvix-tracing = { path = "../tracing", features = ["tonic", "axum"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
url = { workspace = true }
serde = { workspace = true, features = ["derive"] }
lru = { workspace = true }
parking_lot = { workspace = true }
mimalloc = { workspace = true }

[build-dependencies]
<<<<<<< HEAD   (649ccd chore(clippy): fix clippy (lvl2: MachineApplicable, human-ai)
prost-build = "0.13.3"
tonic-build = "0.12.0"
=======
prost-build = { workspace = true }
tonic-build = { workspace = true }
>>>>>>> BRANCH (e4378f feat(tvix/store): seekable nar renderer)

[features]
default = ["otlp"]
otlp = ["tvix-tracing/otlp"]

[dev-dependencies]
hex-literal = { workspace = true }
rstest = { workspace = true }

[lints]
workspace = true
