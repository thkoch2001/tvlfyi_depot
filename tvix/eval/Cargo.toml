[package]
name = "tvix-eval"
version = "0.1.0"
edition = "2021"

[lib]
name = "tvix_eval"

[dependencies]
builtin-macros = { path = "./builtin-macros", package = "tvix-eval-builtin-macros" }
bytes = "1.7.1"
bstr = { version = "1.10.0", features = ["serde"] }
codemap = "0.1.3"
codemap-diagnostic = "0.1.2"
dirs = "4.0.0"
genawaiter = { version = "0.99.1", default-features = false }
itertools = "0.12.1"
lazy_static = "1.5.0"
lexical-core = { version = "0.8.5", features = ["format", "parse-floats"] }
os_str_bytes = { version = "6.6", features = ["conversions"] }
path-clean = "0.1"
proptest = { version = "1.5.0", default-features = false, features = ["std", "alloc", "tempfile"], optional = true }
regex = "1.10.6"
rnix = "0.11.0"
rowan = "*" # pinned by rnix
serde = { version = "1.0", features = [ "rc", "derive" ] }
serde_json = "1.0"
smol_str = "0.2.2"
tabwriter = "1.4"
test-strategy = { version = "0.2.1", optional = true }
toml = "0.6.0"
sha2 = "0.10.8"
sha1 = "0.10.6"
md-5 = "0.10.6"
data-encoding = "2.6.0"
rustc-hash = "2.0.0"
nohash-hasher = "0.2.0"
vu128 = "1.1.0"

[dev-dependencies]
criterion = "0.5"
itertools = "0.12.1"
mimalloc = "0.1.43"
pretty_assertions = "1.4.0"
rstest = "0.19.0"
tempfile = "3.12.0"

[features]
default = ["impure", "arbitrary", "nix_tests"]

# Enables running the Nix language test suite from the original C++
# Nix implementation (at version 2.3) against Tvix.
nix_tests = []

# Enables operations in the VM which depend on the ability to perform I/O
impure = []

# Enables Arbitrary impls for internal types (required to run tests)
arbitrary = ["proptest", "test-strategy"]

# Don't leak strings (enable this if you care about peak memory usage of eval)
#
# This is intended as a stop-gap until we have a garbage collector
no_leak = []

[[bench]]
name = "eval"
harness = false
