[package]
name = "tvix-eval"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "tvix_eval"

[dependencies]
backtrace-on-stack-overflow = { version = "0.2.0", optional = true }
builtin-macros = { path = "./builtin-macros", package = "tvix-eval-builtin-macros" }
codemap = "0.1.3"
codemap-diagnostic = "0.1.1"
dirs = "4.0.0"
imbl = { version = "2.0", features = [ "serde" ] }
lazy_static = "1.4.0"
lexical-core = { version = "0.8.5", features = ["format", "parse-floats"] }
path-clean = "0.1"
proptest = { version = "1.0.0", default_features = false, features = ["std", "alloc", "break-dead-code", "tempfile"], optional = true }
regex = "1.6.0"
rnix = "0.11.0"
rowan = "*" # pinned by rnix
serde = { version = "1.0", features = [ "rc", "derive" ] }
serde_json = "1.0"
smol_str = "0.1"
tabwriter = "1.2"
test-strategy = { version = "0.2.1", optional = true }
xml-rs = "0.8.4"

[dev-dependencies]
criterion = "0.4"
pretty_assertions = "1.2.1"
itertools = "0.10.3"
tempdir = "0.3.7"

[dev-dependencies.test-generator]
# This fork of test-generator adds support for cargo workspaces, see
# also https://github.com/frehberg/test-generator/pull/14
git = "https://github.com/JamesGuthrie/test-generator.git"
rev = "82e799979980962aec1aa324ec6e0e4cad781f41"

[features]
default = [ "impure", "arbitrary", "nix_tests", "backtrace_overflow" ]

# Enables running the Nix language test suite from the original C++
# Nix implementation (at version 2.3) against Tvix.
nix_tests = []

# Enables operations in the VM which depend on the ability to perform I/O
impure = []

# Enables Arbitrary impls for internal types (required to run tests)
arbitrary = [ "proptest", "test-strategy", "imbl/proptest" ]

# For debugging use only; not appropriate for production use.
backtrace_overflow = [ "backtrace-on-stack-overflow" ]

[[bench]]
name = "eval"
harness = false
