# Convenience defn for creating vim-specific kbd behavior
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


# change tmux leader
unbind C-b
set -g prefix C-q
bind C-q send-prefix


# COLORS!
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"


# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l zsh"


# copy text like it's Vim
bind-key -n Escape if-shell "${is_vim}" "send-keys Escape" copy-mode


# Transpose window layouts
bind-key -n M-r rotate-window -D


# Maximize current pane
bind-key -n M-z resize-pane -Z


# Use vim keybindings in copy mode
setw -g mode-keys vi


# kbds to create and delete tmux panes and windows (without confirmation)
bind-key -n M-q if-shell "${is_vim}" "send-keys M-q" kill-pane


# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"


# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


# fix for slow ESC issues
set -s escape-time 0


# start window indicies at 1
set -g base-index 1


# window naming nonsense
set-window-option -g automatic-rename on
set-window-option -g allow-rename off


# new windows carry over current working directory
bind c new-window -c '#{pane_current_path}'


# Make tmux work like vi
set-window-option -g mode-keys vi


# Easier window swaps
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1


# Easier window moves
bind -n m-left previous-window
bind -n m-right next-window


# window resizing
bind -n S-Up resize-pane -U 5
bind -n S-Down resize-pane -D 5
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10


# Option + number to jump to window
bind -n m-0 select-window -t 0
bind -n m-1 select-window -t 1
bind -n m-2 select-window -t 2
bind -n m-3 select-window -t 3
bind -n m-4 select-window -t 4
bind -n m-5 select-window -t 5
bind -n m-6 select-window -t 6
bind -n m-7 select-window -t 7
bind -n m-8 select-window -t 8
bind -n m-9 select-window -t 9


# Option + l to toggle between sessions
# bind -n m-l switch-client -l
bind -n m-s choose-session


# split window shortcuts, maintaing the working directory
bind-key -n M-\ split-window -h -c '#{pane_current_path}'
bind-key -n M-- split-window -v -c '#{pane_current_path}'


bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# powerline for tmux
run-shell "powerline-daemon -q"
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

bind-key h set -g status

set-option -g status on
set-option -g status-interval 2
# set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
# set-option -g status-left "#(~/dotfiles/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/dotfiles/tmux-powerline/powerline.sh right)"


# Bindings for "christoomey/vim-tmux-navigator"
bind-key -n M-h if-shell "${is_vim}" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "${is_vim}" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "${is_vim}" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "${is_vim}" "send-keys M-l" "select-pane -R"


# Configuration for a Pomodoro timer available at 'tj/pomo'
set-option -g status-right '#(cat ~/.pomo_stat)'
