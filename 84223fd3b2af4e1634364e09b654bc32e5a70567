{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f24a92fe_5551a9b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-20T08:12:44Z",
      "side": 1,
      "message": "Missing dot at the end.\n\nAlso, not correct yet:\n\n1) This may only work for store paths:\n\n```\nnix-repl\u003e builtins.storePath /dev/null  \nerror:\n       … while calling the \u0027storePath\u0027 builtin\n\n         at «string»:1:1:\n\n            1| builtins.storePath /dev/null\n             | ^\n\n       error: path \u0027/dev/null\u0027 is not in the Nix store\n\n       at «none»:0: (source not available)\n```\n\nvs\n\n```\ntvix-repl\u003e builtins.storePath /dev/null\n\u003d\u003e \"/dev/null\" :: string\ntvix-repl\u003e builtins.getContext (builtins.storePath /dev/null)\n\u003d\u003e { \"/dev/null\" \u003d { path \u003d true; }; } :: set\n```\n\n\n---\n\n2) Nix takes a string or Path as argument, while tvix errors out if you give it a string:\n```\nnix-repl\u003e builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n\"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n```\n\nvs.\n\n```\ntvix-repl\u003e builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\nnote: while evaluating this Nix code\n --\u003e [code]:1:1\n  |\n1 | builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nerror[E006]: expected value of type \u0027path\u0027, but found a \u0027string\u0027\n --\u003e [code]:1:1\n  |\n1 | builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n```",
      "revId": "84223fd3b2af4e1634364e09b654bc32e5a70567",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b38e527e_2a5eb06d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000010
      },
      "writtenOn": "2024-05-27T16:43:37Z",
      "side": 1,
      "message": "\u003e Missing dot at the end.\n\ndoes this really matter?\n\n\u003e Also, not correct yet:\n\u003e \n\u003e 1) This may only work for store paths:\n\u003e \n\u003e ```\n\u003e nix-repl\u003e builtins.storePath /dev/null  \n\u003e error:\n\u003e        … while calling the \u0027storePath\u0027 builtin\n\u003e \n\u003e          at «string»:1:1:\n\u003e \n\u003e             1| builtins.storePath /dev/null\n\u003e              | ^\n\u003e \n\u003e        error: path \u0027/dev/null\u0027 is not in the Nix store\n\u003e \n\u003e        at «none»:0: (source not available)\n\u003e ```\n\u003e \n\u003e vs\n\u003e \n\u003e ```\n\u003e tvix-repl\u003e builtins.storePath /dev/null\n\u003e \u003d\u003e \"/dev/null\" :: string\n\u003e tvix-repl\u003e builtins.getContext (builtins.storePath /dev/null)\n\u003e \u003d\u003e { \"/dev/null\" \u003d { path \u003d true; }; } :: set\n\u003e ```\n\u003e \n\u003e \n\u003e ---\n\u003e \n\u003e 2) Nix takes a string or Path as argument, while tvix errors out if you give it a string:\n\u003e ```\n\u003e nix-repl\u003e builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n\u003e \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n\u003e ```\n\u003e \n\u003e vs.\n\u003e \n\u003e ```\n\u003e tvix-repl\u003e builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n\u003e note: while evaluating this Nix code\n\u003e  --\u003e [code]:1:1\n\u003e   |\n\u003e 1 | builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n\u003e   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\u003e error[E006]: expected value of type \u0027path\u0027, but found a \u0027string\u0027\n\u003e  --\u003e [code]:1:1\n\u003e   |\n\u003e 1 | builtins.storePath \"/nix/store/pa10z4ngm0g83kx9mssrqzz30s84vq7k-hello-2.12.1.tar.gz\"\n\u003e   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\u003e ```",
      "parentUuid": "f24a92fe_5551a9b9",
      "revId": "84223fd3b2af4e1634364e09b654bc32e5a70567",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14237945_9986ea0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-20T08:12:44Z",
      "side": 1,
      "message": "We can coerce a file of known contents into the store, discard the context, and then run some tests on that string. Or literally write out the path after it has been coerced - the calculation is the same across all architectures. \n\nThis should allow writing some test cases, and until we have a better fixture / classification system we can use `/dev/null` like `glue/src/tests/tvix_tests/eval-okay-fetchurl.nix` does.",
      "revId": "84223fd3b2af4e1634364e09b654bc32e5a70567",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf150e19_bc25b42d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-20T08:12:44Z",
      "side": 1,
      "message": "\"g\"",
      "revId": "84223fd3b2af4e1634364e09b654bc32e5a70567",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6030d5e_396a4f44",
        "filename": "tvix/glue/src/builtins/errors.rs",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1000036
      },
      "writtenOn": "2024-05-20T08:17:02Z",
      "side": 1,
      "message": "```suggestion\n    #[error(\"path \u0027{0}\u0027 does not exist and cannot be created\")]\n```\n\n`{0}` does use Display on the struct element, see https://docs.rs/thiserror/latest/thiserror/#details.",
      "revId": "84223fd3b2af4e1634364e09b654bc32e5a70567",
      "serverId": "4fdfa107-4df9-4596-8e0a-1d2bbdd96e36"
    }
  ]
}